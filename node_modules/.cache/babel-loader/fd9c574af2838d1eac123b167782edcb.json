{"ast":null,"code":"var alloc = Buffer.alloc;\nvar ZEROS = '0000000000000000000';\nvar SEVENS = '7777777777777777777';\nvar ZERO_OFFSET = '0'.charCodeAt(0);\nvar USTAR_MAGIC = Buffer.from('ustar\\x00', 'binary');\nvar USTAR_VER = Buffer.from('00', 'binary');\nvar GNU_MAGIC = Buffer.from('ustar\\x20', 'binary');\nvar GNU_VER = Buffer.from('\\x20\\x00', 'binary');\nvar MASK = parseInt('7777', 8);\nvar MAGIC_OFFSET = 257;\nvar VERSION_OFFSET = 263;\n\nvar clamp = function clamp(index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue;\n  index = ~~index; // Coerce to integer.\n\n  if (index >= len) return len;\n  if (index >= 0) return index;\n  index += len;\n  if (index >= 0) return index;\n  return 0;\n};\n\nvar toType = function toType(flag) {\n  switch (flag) {\n    case 0:\n      return 'file';\n\n    case 1:\n      return 'link';\n\n    case 2:\n      return 'symlink';\n\n    case 3:\n      return 'character-device';\n\n    case 4:\n      return 'block-device';\n\n    case 5:\n      return 'directory';\n\n    case 6:\n      return 'fifo';\n\n    case 7:\n      return 'contiguous-file';\n\n    case 72:\n      return 'pax-header';\n\n    case 55:\n      return 'pax-global-header';\n\n    case 27:\n      return 'gnu-long-link-path';\n\n    case 28:\n    case 30:\n      return 'gnu-long-path';\n  }\n\n  return null;\n};\n\nvar toTypeflag = function toTypeflag(flag) {\n  switch (flag) {\n    case 'file':\n      return 0;\n\n    case 'link':\n      return 1;\n\n    case 'symlink':\n      return 2;\n\n    case 'character-device':\n      return 3;\n\n    case 'block-device':\n      return 4;\n\n    case 'directory':\n      return 5;\n\n    case 'fifo':\n      return 6;\n\n    case 'contiguous-file':\n      return 7;\n\n    case 'pax-header':\n      return 72;\n  }\n\n  return 0;\n};\n\nvar indexOf = function indexOf(block, num, offset, end) {\n  for (; offset < end; offset++) {\n    if (block[offset] === num) return offset;\n  }\n\n  return end;\n};\n\nvar cksum = function cksum(block) {\n  var sum = 8 * 32;\n\n  for (var i = 0; i < 148; i++) {\n    sum += block[i];\n  }\n\n  for (var j = 156; j < 512; j++) {\n    sum += block[j];\n  }\n\n  return sum;\n};\n\nvar encodeOct = function encodeOct(val, n) {\n  val = val.toString(8);\n  if (val.length > n) return SEVENS.slice(0, n) + ' ';else return ZEROS.slice(0, n - val.length) + val + ' ';\n};\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\n\n\nfunction parse256(buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  var positive;\n  if (buf[0] === 0x80) positive = true;else if (buf[0] === 0xFF) positive = false;else return null; // build up a base-256 tuple from the least sig to the highest\n\n  var tuple = [];\n\n  for (var i = buf.length - 1; i > 0; i--) {\n    var byte = buf[i];\n    if (positive) tuple.push(byte);else tuple.push(0xFF - byte);\n  }\n\n  var sum = 0;\n  var l = tuple.length;\n\n  for (i = 0; i < l; i++) {\n    sum += tuple[i] * Math.pow(256, i);\n  }\n\n  return positive ? sum : -1 * sum;\n}\n\nvar decodeOct = function decodeOct(val, offset, length) {\n  val = val.slice(offset, offset + length);\n  offset = 0; // If prefixed with 0x80 then parse as a base-256 integer\n\n  if (val[offset] & 0x80) {\n    return parse256(val);\n  } else {\n    // Older versions of tar can prefix with spaces\n    while (offset < val.length && val[offset] === 32) {\n      offset++;\n    }\n\n    var end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length);\n\n    while (offset < end && val[offset] === 0) {\n      offset++;\n    }\n\n    if (end === offset) return 0;\n    return parseInt(val.slice(offset, end).toString(), 8);\n  }\n};\n\nvar decodeStr = function decodeStr(val, offset, length, encoding) {\n  return val.slice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding);\n};\n\nvar addLength = function addLength(str) {\n  var len = Buffer.byteLength(str);\n  var digits = Math.floor(Math.log(len) / Math.log(10)) + 1;\n  if (len + digits >= Math.pow(10, digits)) digits++;\n  return len + digits + str;\n};\n\nexports.decodeLongPath = function (buf, encoding) {\n  return decodeStr(buf, 0, buf.length, encoding);\n};\n\nexports.encodePax = function (opts) {\n  // TODO: encode more stuff in pax\n  var result = '';\n  if (opts.name) result += addLength(' path=' + opts.name + '\\n');\n  if (opts.linkname) result += addLength(' linkpath=' + opts.linkname + '\\n');\n  var pax = opts.pax;\n\n  if (pax) {\n    for (var key in pax) {\n      result += addLength(' ' + key + '=' + pax[key] + '\\n');\n    }\n  }\n\n  return Buffer.from(result);\n};\n\nexports.decodePax = function (buf) {\n  var result = {};\n\n  while (buf.length) {\n    var i = 0;\n\n    while (i < buf.length && buf[i] !== 32) {\n      i++;\n    }\n\n    var len = parseInt(buf.slice(0, i).toString(), 10);\n    if (!len) return result;\n    var b = buf.slice(i + 1, len - 1).toString();\n    var keyIndex = b.indexOf('=');\n    if (keyIndex === -1) return result;\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1);\n    buf = buf.slice(len);\n  }\n\n  return result;\n};\n\nexports.encode = function (opts) {\n  var buf = alloc(512);\n  var name = opts.name;\n  var prefix = '';\n  if (opts.typeflag === 5 && name[name.length - 1] !== '/') name += '/';\n  if (Buffer.byteLength(name) !== name.length) return null; // utf-8\n\n  while (Buffer.byteLength(name) > 100) {\n    var i = name.indexOf('/');\n    if (i === -1) return null;\n    prefix += prefix ? '/' + name.slice(0, i) : name.slice(0, i);\n    name = name.slice(i + 1);\n  }\n\n  if (Buffer.byteLength(name) > 100 || Buffer.byteLength(prefix) > 155) return null;\n  if (opts.linkname && Buffer.byteLength(opts.linkname) > 100) return null;\n  buf.write(name);\n  buf.write(encodeOct(opts.mode & MASK, 6), 100);\n  buf.write(encodeOct(opts.uid, 6), 108);\n  buf.write(encodeOct(opts.gid, 6), 116);\n  buf.write(encodeOct(opts.size, 11), 124);\n  buf.write(encodeOct(opts.mtime.getTime() / 1000 | 0, 11), 136);\n  buf[156] = ZERO_OFFSET + toTypeflag(opts.type);\n  if (opts.linkname) buf.write(opts.linkname, 157);\n  USTAR_MAGIC.copy(buf, MAGIC_OFFSET);\n  USTAR_VER.copy(buf, VERSION_OFFSET);\n  if (opts.uname) buf.write(opts.uname, 265);\n  if (opts.gname) buf.write(opts.gname, 297);\n  buf.write(encodeOct(opts.devmajor || 0, 6), 329);\n  buf.write(encodeOct(opts.devminor || 0, 6), 337);\n  if (prefix) buf.write(prefix, 345);\n  buf.write(encodeOct(cksum(buf), 6), 148);\n  return buf;\n};\n\nexports.decode = function (buf, filenameEncoding) {\n  var typeflag = buf[156] === 0 ? 0 : buf[156] - ZERO_OFFSET;\n  var name = decodeStr(buf, 0, 100, filenameEncoding);\n  var mode = decodeOct(buf, 100, 8);\n  var uid = decodeOct(buf, 108, 8);\n  var gid = decodeOct(buf, 116, 8);\n  var size = decodeOct(buf, 124, 12);\n  var mtime = decodeOct(buf, 136, 12);\n  var type = toType(typeflag);\n  var linkname = buf[157] === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding);\n  var uname = decodeStr(buf, 265, 32);\n  var gname = decodeStr(buf, 297, 32);\n  var devmajor = decodeOct(buf, 329, 8);\n  var devminor = decodeOct(buf, 337, 8);\n  var c = cksum(buf); // checksum is still initial value if header was null.\n\n  if (c === 8 * 32) return null; // valid checksum\n\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?');\n\n  if (USTAR_MAGIC.compare(buf, MAGIC_OFFSET, MAGIC_OFFSET + 6) === 0) {\n    // ustar (posix) format.\n    // prepend prefix, if present.\n    if (buf[345]) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name;\n  } else if (GNU_MAGIC.compare(buf, MAGIC_OFFSET, MAGIC_OFFSET + 6) === 0 && GNU_VER.compare(buf, VERSION_OFFSET, VERSION_OFFSET + 2) === 0) {// 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n    // multi-volume tarballs.\n  } else {\n    throw new Error('Invalid tar header: unknown format.');\n  } // to support old tar versions that use trailing / to indicate dirs\n\n\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5;\n  return {\n    name: name,\n    mode: mode,\n    uid: uid,\n    gid: gid,\n    size: size,\n    mtime: new Date(1000 * mtime),\n    type: type,\n    linkname: linkname,\n    uname: uname,\n    gname: gname,\n    devmajor: devmajor,\n    devminor: devminor\n  };\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/tar-stream/headers.js"],"names":["alloc","Buffer","ZEROS","SEVENS","ZERO_OFFSET","charCodeAt","USTAR_MAGIC","from","USTAR_VER","GNU_MAGIC","GNU_VER","MASK","parseInt","MAGIC_OFFSET","VERSION_OFFSET","clamp","index","len","defaultValue","toType","flag","toTypeflag","indexOf","block","num","offset","end","cksum","sum","i","j","encodeOct","val","n","toString","length","slice","parse256","buf","positive","tuple","byte","push","l","Math","pow","decodeOct","decodeStr","encoding","addLength","str","byteLength","digits","floor","log","exports","decodeLongPath","encodePax","opts","result","name","linkname","pax","key","decodePax","b","keyIndex","encode","prefix","typeflag","write","mode","uid","gid","size","mtime","getTime","type","copy","uname","gname","devmajor","devminor","decode","filenameEncoding","c","Error","compare","Date"],"mappings":"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","sourcesContent":["var alloc = Buffer.alloc\n\nvar ZEROS = '0000000000000000000'\nvar SEVENS = '7777777777777777777'\nvar ZERO_OFFSET = '0'.charCodeAt(0)\nvar USTAR_MAGIC = Buffer.from('ustar\\x00', 'binary')\nvar USTAR_VER = Buffer.from('00', 'binary')\nvar GNU_MAGIC = Buffer.from('ustar\\x20', 'binary')\nvar GNU_VER = Buffer.from('\\x20\\x00', 'binary')\nvar MASK = parseInt('7777', 8)\nvar MAGIC_OFFSET = 257\nvar VERSION_OFFSET = 263\n\nvar clamp = function (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nvar toType = function (flag) {\n  switch (flag) {\n    case 0:\n      return 'file'\n    case 1:\n      return 'link'\n    case 2:\n      return 'symlink'\n    case 3:\n      return 'character-device'\n    case 4:\n      return 'block-device'\n    case 5:\n      return 'directory'\n    case 6:\n      return 'fifo'\n    case 7:\n      return 'contiguous-file'\n    case 72:\n      return 'pax-header'\n    case 55:\n      return 'pax-global-header'\n    case 27:\n      return 'gnu-long-link-path'\n    case 28:\n    case 30:\n      return 'gnu-long-path'\n  }\n\n  return null\n}\n\nvar toTypeflag = function (flag) {\n  switch (flag) {\n    case 'file':\n      return 0\n    case 'link':\n      return 1\n    case 'symlink':\n      return 2\n    case 'character-device':\n      return 3\n    case 'block-device':\n      return 4\n    case 'directory':\n      return 5\n    case 'fifo':\n      return 6\n    case 'contiguous-file':\n      return 7\n    case 'pax-header':\n      return 72\n  }\n\n  return 0\n}\n\nvar indexOf = function (block, num, offset, end) {\n  for (; offset < end; offset++) {\n    if (block[offset] === num) return offset\n  }\n  return end\n}\n\nvar cksum = function (block) {\n  var sum = 8 * 32\n  for (var i = 0; i < 148; i++) sum += block[i]\n  for (var j = 156; j < 512; j++) sum += block[j]\n  return sum\n}\n\nvar encodeOct = function (val, n) {\n  val = val.toString(8)\n  if (val.length > n) return SEVENS.slice(0, n) + ' '\n  else return ZEROS.slice(0, n - val.length) + val + ' '\n}\n\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\nfunction parse256 (buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  var positive\n  if (buf[0] === 0x80) positive = true\n  else if (buf[0] === 0xFF) positive = false\n  else return null\n\n  // build up a base-256 tuple from the least sig to the highest\n  var tuple = []\n  for (var i = buf.length - 1; i > 0; i--) {\n    var byte = buf[i]\n    if (positive) tuple.push(byte)\n    else tuple.push(0xFF - byte)\n  }\n\n  var sum = 0\n  var l = tuple.length\n  for (i = 0; i < l; i++) {\n    sum += tuple[i] * Math.pow(256, i)\n  }\n\n  return positive ? sum : -1 * sum\n}\n\nvar decodeOct = function (val, offset, length) {\n  val = val.slice(offset, offset + length)\n  offset = 0\n\n  // If prefixed with 0x80 then parse as a base-256 integer\n  if (val[offset] & 0x80) {\n    return parse256(val)\n  } else {\n    // Older versions of tar can prefix with spaces\n    while (offset < val.length && val[offset] === 32) offset++\n    var end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length)\n    while (offset < end && val[offset] === 0) offset++\n    if (end === offset) return 0\n    return parseInt(val.slice(offset, end).toString(), 8)\n  }\n}\n\nvar decodeStr = function (val, offset, length, encoding) {\n  return val.slice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding)\n}\n\nvar addLength = function (str) {\n  var len = Buffer.byteLength(str)\n  var digits = Math.floor(Math.log(len) / Math.log(10)) + 1\n  if (len + digits >= Math.pow(10, digits)) digits++\n\n  return (len + digits) + str\n}\n\nexports.decodeLongPath = function (buf, encoding) {\n  return decodeStr(buf, 0, buf.length, encoding)\n}\n\nexports.encodePax = function (opts) { // TODO: encode more stuff in pax\n  var result = ''\n  if (opts.name) result += addLength(' path=' + opts.name + '\\n')\n  if (opts.linkname) result += addLength(' linkpath=' + opts.linkname + '\\n')\n  var pax = opts.pax\n  if (pax) {\n    for (var key in pax) {\n      result += addLength(' ' + key + '=' + pax[key] + '\\n')\n    }\n  }\n  return Buffer.from(result)\n}\n\nexports.decodePax = function (buf) {\n  var result = {}\n\n  while (buf.length) {\n    var i = 0\n    while (i < buf.length && buf[i] !== 32) i++\n    var len = parseInt(buf.slice(0, i).toString(), 10)\n    if (!len) return result\n\n    var b = buf.slice(i + 1, len - 1).toString()\n    var keyIndex = b.indexOf('=')\n    if (keyIndex === -1) return result\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1)\n\n    buf = buf.slice(len)\n  }\n\n  return result\n}\n\nexports.encode = function (opts) {\n  var buf = alloc(512)\n  var name = opts.name\n  var prefix = ''\n\n  if (opts.typeflag === 5 && name[name.length - 1] !== '/') name += '/'\n  if (Buffer.byteLength(name) !== name.length) return null // utf-8\n\n  while (Buffer.byteLength(name) > 100) {\n    var i = name.indexOf('/')\n    if (i === -1) return null\n    prefix += prefix ? '/' + name.slice(0, i) : name.slice(0, i)\n    name = name.slice(i + 1)\n  }\n\n  if (Buffer.byteLength(name) > 100 || Buffer.byteLength(prefix) > 155) return null\n  if (opts.linkname && Buffer.byteLength(opts.linkname) > 100) return null\n\n  buf.write(name)\n  buf.write(encodeOct(opts.mode & MASK, 6), 100)\n  buf.write(encodeOct(opts.uid, 6), 108)\n  buf.write(encodeOct(opts.gid, 6), 116)\n  buf.write(encodeOct(opts.size, 11), 124)\n  buf.write(encodeOct((opts.mtime.getTime() / 1000) | 0, 11), 136)\n\n  buf[156] = ZERO_OFFSET + toTypeflag(opts.type)\n\n  if (opts.linkname) buf.write(opts.linkname, 157)\n\n  USTAR_MAGIC.copy(buf, MAGIC_OFFSET)\n  USTAR_VER.copy(buf, VERSION_OFFSET)\n  if (opts.uname) buf.write(opts.uname, 265)\n  if (opts.gname) buf.write(opts.gname, 297)\n  buf.write(encodeOct(opts.devmajor || 0, 6), 329)\n  buf.write(encodeOct(opts.devminor || 0, 6), 337)\n\n  if (prefix) buf.write(prefix, 345)\n\n  buf.write(encodeOct(cksum(buf), 6), 148)\n\n  return buf\n}\n\nexports.decode = function (buf, filenameEncoding) {\n  var typeflag = buf[156] === 0 ? 0 : buf[156] - ZERO_OFFSET\n\n  var name = decodeStr(buf, 0, 100, filenameEncoding)\n  var mode = decodeOct(buf, 100, 8)\n  var uid = decodeOct(buf, 108, 8)\n  var gid = decodeOct(buf, 116, 8)\n  var size = decodeOct(buf, 124, 12)\n  var mtime = decodeOct(buf, 136, 12)\n  var type = toType(typeflag)\n  var linkname = buf[157] === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding)\n  var uname = decodeStr(buf, 265, 32)\n  var gname = decodeStr(buf, 297, 32)\n  var devmajor = decodeOct(buf, 329, 8)\n  var devminor = decodeOct(buf, 337, 8)\n\n  var c = cksum(buf)\n\n  // checksum is still initial value if header was null.\n  if (c === 8 * 32) return null\n\n  // valid checksum\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?')\n\n  if (USTAR_MAGIC.compare(buf, MAGIC_OFFSET, MAGIC_OFFSET + 6) === 0) {\n    // ustar (posix) format.\n    // prepend prefix, if present.\n    if (buf[345]) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name\n  } else if (GNU_MAGIC.compare(buf, MAGIC_OFFSET, MAGIC_OFFSET + 6) === 0 &&\n             GNU_VER.compare(buf, VERSION_OFFSET, VERSION_OFFSET + 2) === 0) {\n    // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n    // multi-volume tarballs.\n  } else {\n    throw new Error('Invalid tar header: unknown format.')\n  }\n\n  // to support old tar versions that use trailing / to indicate dirs\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5\n\n  return {\n    name,\n    mode,\n    uid,\n    gid,\n    size,\n    mtime: new Date(1000 * mtime),\n    type,\n    linkname,\n    uname,\n    gname,\n    devmajor,\n    devminor\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
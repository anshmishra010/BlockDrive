{"ast":null,"code":"var through = require('through2');\n\nvar split = require('split2');\n\nvar EOL = require('os').EOL;\n\nvar stringify = require('json-stringify-safe');\n\nmodule.exports = parse;\nmodule.exports.serialize = module.exports.stringify = serialize;\nmodule.exports.parse = parse;\n\nfunction parse(opts) {\n  opts = opts || {};\n  opts.strict = opts.strict !== false;\n\n  function parseRow(row) {\n    try {\n      if (row) return JSON.parse(row);\n    } catch (e) {\n      if (opts.strict) {\n        this.emit('error', new Error('Could not parse row ' + row.slice(0, 50) + '...'));\n      }\n    }\n  }\n\n  return split(parseRow, opts);\n}\n\nfunction serialize(opts) {\n  return through.obj(opts, function (obj, enc, cb) {\n    cb(null, stringify(obj) + EOL);\n  });\n}","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ndjson/index.js"],"names":["through","require","split","EOL","stringify","module","exports","parse","serialize","opts","strict","parseRow","row","JSON","e","emit","Error","slice","obj","enc","cb"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,IAAD,CAAP,CAAcE,GAAxB;;AACA,IAAIC,SAAS,GAAGH,OAAO,CAAC,qBAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAF,MAAM,CAACC,OAAP,CAAeE,SAAf,GAA2BH,MAAM,CAACC,OAAP,CAAeF,SAAf,GAA2BI,SAAtD;AACAH,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBA,KAAvB;;AAEA,SAASA,KAAT,CAAgBE,IAAhB,EAAsB;AACpBA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,EAAAA,IAAI,CAACC,MAAL,GAAcD,IAAI,CAACC,MAAL,KAAgB,KAA9B;;AAEA,WAASC,QAAT,CAAmBC,GAAnB,EAAwB;AACtB,QAAI;AACF,UAAIA,GAAJ,EAAS,OAAOC,IAAI,CAACN,KAAL,CAAWK,GAAX,CAAP;AACV,KAFD,CAEE,OAAOE,CAAP,EAAU;AACV,UAAIL,IAAI,CAACC,MAAT,EAAiB;AACf,aAAKK,IAAL,CAAU,OAAV,EAAmB,IAAIC,KAAJ,CAAU,yBAAyBJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAzB,GAA4C,KAAtD,CAAnB;AACD;AACF;AACF;;AAED,SAAOf,KAAK,CAACS,QAAD,EAAWF,IAAX,CAAZ;AACD;;AAED,SAASD,SAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOT,OAAO,CAACkB,GAAR,CAAYT,IAAZ,EAAkB,UAASS,GAAT,EAAcC,GAAd,EAAmBC,EAAnB,EAAuB;AAC9CA,IAAAA,EAAE,CAAC,IAAD,EAAOhB,SAAS,CAACc,GAAD,CAAT,GAAiBf,GAAxB,CAAF;AACD,GAFM,CAAP;AAGD","sourcesContent":["var through = require('through2')\r\nvar split = require('split2')\r\nvar EOL = require('os').EOL\r\nvar stringify = require('json-stringify-safe')\r\n\r\nmodule.exports = parse\r\nmodule.exports.serialize = module.exports.stringify = serialize\r\nmodule.exports.parse = parse\r\n\r\nfunction parse (opts) {\r\n  opts = opts || {}\r\n  opts.strict = opts.strict !== false\r\n\r\n  function parseRow (row) {\r\n    try {\r\n      if (row) return JSON.parse(row)\r\n    } catch (e) {\r\n      if (opts.strict) {\r\n        this.emit('error', new Error('Could not parse row ' + row.slice(0, 50) + '...'))\r\n      }\r\n    }\r\n  }\r\n\r\n  return split(parseRow, opts)\r\n}\r\n\r\nfunction serialize (opts) {\r\n  return through.obj(opts, function(obj, enc, cb) {\r\n    cb(null, stringify(obj) + EOL)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar cleanCID = require('../utils/clean-cid');\n\nvar TarStreamToObjects = require('../utils/tar-stream-to-objects');\n\nvar v = require('is-ipfs');\n\nvar pull = require('pull-stream/pull');\n\nvar map = require('pull-stream/throughs/map');\n\nvar toPull = require('stream-to-pull-stream');\n\nvar deferred = require('pull-defer');\n\nmodule.exports = function (send) {\n  return function (path, opts) {\n    opts = opts || {};\n    var p = deferred.source();\n\n    try {\n      path = cleanCID(path);\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return p.end(err);\n      }\n    }\n\n    var request = {\n      path: 'get',\n      args: path,\n      qs: opts\n    }; // Convert the response stream to TarStream objects\n\n    send.andTransform(request, TarStreamToObjects, function (err, stream) {\n      if (err) {\n        return p.end(err);\n      }\n\n      p.resolve(pull(toPull.source(stream), map(function (file) {\n        var path = file.path,\n            content = file.content;\n        return content ? {\n          path: path,\n          content: toPull.source(content)\n        } : file;\n      })));\n    });\n    return p;\n  };\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/files-regular/get-pull-stream.js"],"names":["cleanCID","require","TarStreamToObjects","v","pull","map","toPull","deferred","module","exports","send","path","opts","p","source","err","ipfsPath","end","request","args","qs","andTransform","stream","resolve","file","content"],"mappings":"AAAA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,gCAAD,CAAlC;;AACA,IAAME,CAAC,GAAGF,OAAO,CAAC,SAAD,CAAjB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAMI,GAAG,GAAGJ,OAAO,CAAC,0BAAD,CAAnB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAMM,QAAQ,GAAGN,OAAO,CAAC,YAAD,CAAxB;;AAEAO,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAO,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,QAAMC,CAAC,GAAGN,QAAQ,CAACO,MAAT,EAAV;;AAEA,QAAI;AACFH,MAAAA,IAAI,GAAGX,QAAQ,CAACW,IAAD,CAAf;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,UAAI,CAACZ,CAAC,CAACa,QAAF,CAAWL,IAAX,CAAL,EAAuB;AACrB,eAAOE,CAAC,CAACI,GAAF,CAAMF,GAAN,CAAP;AACD;AACF;;AAED,QAAMG,OAAO,GAAG;AAAEP,MAAAA,IAAI,EAAE,KAAR;AAAeQ,MAAAA,IAAI,EAAER,IAArB;AAA2BS,MAAAA,EAAE,EAAER;AAA/B,KAAhB,CAbqB,CAerB;;AACAF,IAAAA,IAAI,CAACW,YAAL,CAAkBH,OAAlB,EAA2BhB,kBAA3B,EAA+C,UAACa,GAAD,EAAMO,MAAN,EAAiB;AAC9D,UAAIP,GAAJ,EAAS;AAAE,eAAOF,CAAC,CAACI,GAAF,CAAMF,GAAN,CAAP;AAAmB;;AAE9BF,MAAAA,CAAC,CAACU,OAAF,CACEnB,IAAI,CACFE,MAAM,CAACQ,MAAP,CAAcQ,MAAd,CADE,EAEFjB,GAAG,CAAC,UAAAmB,IAAI,EAAI;AAAA,YACFb,IADE,GACgBa,IADhB,CACFb,IADE;AAAA,YACIc,OADJ,GACgBD,IADhB,CACIC,OADJ;AAEV,eAAOA,OAAO,GAAG;AAAEd,UAAAA,IAAI,EAAJA,IAAF;AAAQc,UAAAA,OAAO,EAAEnB,MAAM,CAACQ,MAAP,CAAcW,OAAd;AAAjB,SAAH,GAA+CD,IAA7D;AACD,OAHE,CAFD,CADN;AASD,KAZD;AAcA,WAAOX,CAAP;AACD,GA/BD;AAgCD,CAjCD","sourcesContent":["'use strict'\n\nconst cleanCID = require('../utils/clean-cid')\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects')\nconst v = require('is-ipfs')\nconst pull = require('pull-stream/pull')\nconst map = require('pull-stream/throughs/map')\nconst toPull = require('stream-to-pull-stream')\nconst deferred = require('pull-defer')\n\nmodule.exports = (send) => {\n  return (path, opts) => {\n    opts = opts || {}\n\n    const p = deferred.source()\n\n    try {\n      path = cleanCID(path)\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return p.end(err)\n      }\n    }\n\n    const request = { path: 'get', args: path, qs: opts }\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) { return p.end(err) }\n\n      p.resolve(\n        pull(\n          toPull.source(stream),\n          map(file => {\n            const { path, content } = file\n            return content ? { path, content: toPull.source(content) } : file\n          })\n        )\n      )\n    })\n\n    return p\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar createHash = require('create-hash');\n\nvar HmacDRBG = require('drbg.js/hmac');\n\nvar messages = require('../messages.json');\n\nvar BN = require('./bn');\n\nvar ECPoint = require('./ecpoint');\n\nvar g = require('./ecpointg');\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = BN.fromBuffer(privateKey);\n  return !(bn.isOverflow() || bn.isZero());\n};\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = BN.fromBuffer(privateKey);\n  if (d.isOverflow() || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL);\n  return g.mul(d).toPublicKey(compressed);\n};\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = BN.fromBuffer(privateKey);\n  if (bn.isZero()) return Buffer.alloc(32);\n  if (bn.ucmp(BN.n) > 0) bn.isub(BN.n);\n  return BN.n.sub(bn).toBuffer();\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = BN.fromBuffer(privateKey);\n  if (bn.isOverflow() || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID);\n  return bn.uinvm().toBuffer();\n};\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = BN.fromBuffer(tweak);\n  if (bn.isOverflow()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n  bn.iadd(BN.fromBuffer(privateKey));\n  if (bn.isOverflow()) bn.isub(BN.n);\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n  return bn.toBuffer();\n};\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = BN.fromBuffer(tweak);\n  if (bn.isOverflow() || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);\n  var d = BN.fromBuffer(privateKey);\n  return bn.umul(d).ureduce().toBuffer();\n};\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = BN.fromBuffer(privateKey);\n  if (d.isOverflow() || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL);\n  return g.mul(d).toPublicKey(compressed);\n};\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey);\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  return point.toPublicKey(compressed);\n};\n\nexports.publicKeyVerify = function (publicKey) {\n  return ECPoint.fromPublicKey(publicKey) !== null;\n};\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey);\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  tweak = BN.fromBuffer(tweak);\n  if (tweak.isOverflow()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n  var result = g.mul(tweak).add(point);\n  if (result.inf) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n  return result.toPublicKey(compressed);\n};\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey);\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  tweak = BN.fromBuffer(tweak);\n  if (tweak.isOverflow() || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);\n  return point.mul(tweak).toPublicKey(compressed);\n};\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var points = new Array(publicKeys.length);\n\n  for (var i = 0; i < publicKeys.length; ++i) {\n    points[i] = ECPoint.fromPublicKey(publicKeys[i]);\n    if (points[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  }\n\n  var point = points[0];\n\n  for (var j = 1; j < points.length; ++j) {\n    point = point.add(points[j]);\n  }\n\n  if (point.inf) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL);\n  return point.toPublicKey(compressed);\n};\n\nexports.signatureNormalize = function (signature) {\n  var r = BN.fromBuffer(signature.slice(0, 32));\n  var s = BN.fromBuffer(signature.slice(32, 64));\n  if (r.isOverflow() || s.isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  var result = Buffer.from(signature);\n  if (s.isHigh()) BN.n.sub(s).toBuffer().copy(result, 32);\n  return result;\n};\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32);\n  var s = signature.slice(32, 64);\n  if (BN.fromBuffer(r).isOverflow() || BN.fromBuffer(s).isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  return {\n    r: r,\n    s: s\n  };\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = BN.fromBuffer(sigObj.r);\n  if (r.isOverflow()) r = BN.fromNumber(0);\n  var s = BN.fromBuffer(sigObj.s);\n  if (s.isOverflow()) s = BN.fromNumber(0);\n  return Buffer.concat([r.toBuffer(), s.toBuffer()]);\n};\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  var d = BN.fromBuffer(privateKey);\n  if (d.isOverflow() || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL);\n\n  if (noncefn === null) {\n    var drbg = new HmacDRBG('sha256', privateKey, message, data);\n\n    noncefn = function noncefn() {\n      return drbg.generate(32);\n    };\n  }\n\n  var bnMessage = BN.fromBuffer(message);\n\n  for (var count = 0;; ++count) {\n    var nonce = noncefn(message, privateKey, null, data, count);\n    if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL);\n    var k = BN.fromBuffer(nonce);\n    if (k.isOverflow() || k.isZero()) continue;\n    var kp = g.mul(k);\n    var r = kp.x.fireduce();\n    if (r.isZero()) continue;\n    var s = k.uinvm().umul(r.umul(d).ureduce().iadd(bnMessage).fireduce()).ureduce();\n    if (s.isZero()) continue;\n    var recovery = (kp.x.ucmp(r) !== 0 ? 2 : 0) | (kp.y.isOdd() ? 1 : 0);\n\n    if (s.isHigh()) {\n      s = BN.n.sub(s);\n      recovery ^= 1;\n    }\n\n    return {\n      signature: Buffer.concat([r.toBuffer(), s.toBuffer()]),\n      recovery: recovery\n    };\n  }\n};\n\nexports.verify = function (message, signature, publicKey) {\n  var sigr = BN.fromBuffer(signature.slice(0, 32));\n  var sigs = BN.fromBuffer(signature.slice(32, 64));\n  if (sigr.isOverflow() || sigs.isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  if (sigs.isHigh() || sigr.isZero() || sigs.isZero()) return false;\n  var pub = ECPoint.fromPublicKey(publicKey);\n  if (pub === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  var sinv = sigs.uinvm();\n  var u1 = sinv.umul(BN.fromBuffer(message)).ureduce();\n  var u2 = sinv.umul(sigr).ureduce();\n  var point = g.mulAdd(u1, pub, u2);\n  if (point.inf) return false; // return ECPoint.fromECJPoint(point).x.fireduce().ucmp(sigr) === 0\n  // Inversion-free\n\n  var z2 = point.z.redSqr();\n  if (sigr.redMul(z2).ucmp(point.x) === 0) return true;\n  if (sigr.ucmp(BN.psn) >= 0) return false;\n  return sigr.iadd(BN.psn).redMul(z2).ucmp(point.x) === 0;\n};\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigr = BN.fromBuffer(signature.slice(0, 32));\n  var sigs = BN.fromBuffer(signature.slice(32, 64));\n  if (sigr.isOverflow() || sigs.isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\n  do {\n    if (sigr.isZero() || sigs.isZero()) break;\n    var kpx = sigr;\n\n    if (recovery >> 1) {\n      if (kpx.ucmp(BN.psn) >= 0) break;\n      kpx = sigr.add(BN.n);\n    }\n\n    var kpPublicKey = Buffer.concat([Buffer.from([0x02 + (recovery & 0x01)]), kpx.toBuffer()]);\n    var kp = ECPoint.fromPublicKey(kpPublicKey);\n    if (kp === null) break;\n    var rInv = sigr.uinvm();\n    var s1 = BN.n.sub(BN.fromBuffer(message)).umul(rInv).ureduce();\n    var s2 = sigs.umul(rInv).ureduce();\n    var point = ECPoint.fromECJPoint(g.mulAdd(s1, kp, s2));\n    return point.toPublicKey(compressed);\n  } while (false);\n\n  throw new Error(messages.ECDSA_RECOVER_FAIL);\n};\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true);\n  return createHash('sha256').update(shared).digest();\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey);\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  var scalar = BN.fromBuffer(privateKey);\n  if (scalar.isOverflow() || scalar.isZero()) throw new Error(messages.ECDH_FAIL);\n  return point.mul(scalar).toPublicKey(compressed);\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/libp2p-crypto-secp256k1/node_modules/secp256k1/lib/js/index.js"],"names":["Buffer","require","createHash","HmacDRBG","messages","BN","ECPoint","g","exports","privateKeyVerify","privateKey","bn","fromBuffer","isOverflow","isZero","privateKeyExport","compressed","d","Error","EC_PRIVATE_KEY_EXPORT_DER_FAIL","mul","toPublicKey","privateKeyNegate","alloc","ucmp","n","isub","sub","toBuffer","privateKeyModInverse","EC_PRIVATE_KEY_RANGE_INVALID","uinvm","privateKeyTweakAdd","tweak","EC_PRIVATE_KEY_TWEAK_ADD_FAIL","iadd","privateKeyTweakMul","EC_PRIVATE_KEY_TWEAK_MUL_FAIL","umul","ureduce","publicKeyCreate","EC_PUBLIC_KEY_CREATE_FAIL","publicKeyConvert","publicKey","point","fromPublicKey","EC_PUBLIC_KEY_PARSE_FAIL","publicKeyVerify","publicKeyTweakAdd","EC_PUBLIC_KEY_TWEAK_ADD_FAIL","result","add","inf","publicKeyTweakMul","EC_PUBLIC_KEY_TWEAK_MUL_FAIL","publicKeyCombine","publicKeys","points","Array","length","i","j","EC_PUBLIC_KEY_COMBINE_FAIL","signatureNormalize","signature","r","slice","s","ECDSA_SIGNATURE_PARSE_FAIL","from","isHigh","copy","signatureExport","signatureImport","sigObj","fromNumber","concat","sign","message","noncefn","data","ECDSA_SIGN_FAIL","drbg","generate","bnMessage","count","nonce","isBuffer","k","kp","x","fireduce","recovery","y","isOdd","verify","sigr","sigs","pub","sinv","u1","u2","mulAdd","z2","z","redSqr","redMul","psn","recover","kpx","kpPublicKey","rInv","s1","s2","fromECJPoint","ECDSA_RECOVER_FAIL","ecdh","shared","ecdhUnsafe","update","digest","scalar","ECDH_FAIL"],"mappings":"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","sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar HmacDRBG = require('drbg.js/hmac')\nvar messages = require('../messages.json')\nvar BN = require('./bn')\nvar ECPoint = require('./ecpoint')\nvar g = require('./ecpointg')\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = BN.fromBuffer(privateKey)\n  return !(bn.isOverflow() || bn.isZero())\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = BN.fromBuffer(privateKey)\n  if (d.isOverflow() || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return g.mul(d).toPublicKey(compressed)\n}\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = BN.fromBuffer(privateKey)\n  if (bn.isZero()) return Buffer.alloc(32)\n\n  if (bn.ucmp(BN.n) > 0) bn.isub(BN.n)\n  return BN.n.sub(bn).toBuffer()\n}\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = BN.fromBuffer(privateKey)\n  if (bn.isOverflow() || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID)\n\n  return bn.uinvm().toBuffer()\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = BN.fromBuffer(tweak)\n  if (bn.isOverflow()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(BN.fromBuffer(privateKey))\n  if (bn.isOverflow()) bn.isub(BN.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toBuffer()\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = BN.fromBuffer(tweak)\n  if (bn.isOverflow() || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  var d = BN.fromBuffer(privateKey)\n  return bn.umul(d).ureduce().toBuffer()\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = BN.fromBuffer(privateKey)\n  if (d.isOverflow() || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return g.mul(d).toPublicKey(compressed)\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey)\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return point.toPublicKey(compressed)\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return ECPoint.fromPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey)\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = BN.fromBuffer(tweak)\n  if (tweak.isOverflow()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  var result = g.mul(tweak).add(point)\n  if (result.inf) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return result.toPublicKey(compressed)\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey)\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = BN.fromBuffer(tweak)\n  if (tweak.isOverflow() || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return point.mul(tweak).toPublicKey(compressed)\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var points = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    points[i] = ECPoint.fromPublicKey(publicKeys[i])\n    if (points[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = points[0]\n  for (var j = 1; j < points.length; ++j) point = point.add(points[j])\n  if (point.inf) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return point.toPublicKey(compressed)\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = BN.fromBuffer(signature.slice(0, 32))\n  var s = BN.fromBuffer(signature.slice(32, 64))\n  if (r.isOverflow() || s.isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = Buffer.from(signature)\n  if (s.isHigh()) BN.n.sub(s).toBuffer().copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (BN.fromBuffer(r).isOverflow() || BN.fromBuffer(s).isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = BN.fromBuffer(sigObj.r)\n  if (r.isOverflow()) r = BN.fromNumber(0)\n\n  var s = BN.fromBuffer(sigObj.s)\n  if (s.isOverflow()) s = BN.fromNumber(0)\n\n  return Buffer.concat([r.toBuffer(), s.toBuffer()])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  var d = BN.fromBuffer(privateKey)\n  if (d.isOverflow() || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  if (noncefn === null) {\n    var drbg = new HmacDRBG('sha256', privateKey, message, data)\n    noncefn = function () { return drbg.generate(32) }\n  }\n\n  var bnMessage = BN.fromBuffer(message)\n  for (var count = 0; ; ++count) {\n    var nonce = noncefn(message, privateKey, null, data, count)\n    if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n    var k = BN.fromBuffer(nonce)\n    if (k.isOverflow() || k.isZero()) continue\n\n    var kp = g.mul(k)\n    var r = kp.x.fireduce()\n    if (r.isZero()) continue\n\n    var s = k.uinvm().umul(r.umul(d).ureduce().iadd(bnMessage).fireduce()).ureduce()\n    if (s.isZero()) continue\n\n    var recovery = (kp.x.ucmp(r) !== 0 ? 2 : 0) | (kp.y.isOdd() ? 1 : 0)\n    if (s.isHigh()) {\n      s = BN.n.sub(s)\n      recovery ^= 1\n    }\n\n    return {\n      signature: Buffer.concat([r.toBuffer(), s.toBuffer()]),\n      recovery: recovery\n    }\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigr = BN.fromBuffer(signature.slice(0, 32))\n  var sigs = BN.fromBuffer(signature.slice(32, 64))\n  if (sigr.isOverflow() || sigs.isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  if (sigs.isHigh() || sigr.isZero() || sigs.isZero()) return false\n\n  var pub = ECPoint.fromPublicKey(publicKey)\n  if (pub === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var sinv = sigs.uinvm()\n  var u1 = sinv.umul(BN.fromBuffer(message)).ureduce()\n  var u2 = sinv.umul(sigr).ureduce()\n  var point = g.mulAdd(u1, pub, u2)\n  if (point.inf) return false\n\n  // return ECPoint.fromECJPoint(point).x.fireduce().ucmp(sigr) === 0\n  // Inversion-free\n  var z2 = point.z.redSqr()\n  if (sigr.redMul(z2).ucmp(point.x) === 0) return true\n  if (sigr.ucmp(BN.psn) >= 0) return false\n\n  return sigr.iadd(BN.psn).redMul(z2).ucmp(point.x) === 0\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigr = BN.fromBuffer(signature.slice(0, 32))\n  var sigs = BN.fromBuffer(signature.slice(32, 64))\n  if (sigr.isOverflow() || sigs.isOverflow()) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  do {\n    if (sigr.isZero() || sigs.isZero()) break\n\n    var kpx = sigr\n    if (recovery >> 1) {\n      if (kpx.ucmp(BN.psn) >= 0) break\n      kpx = sigr.add(BN.n)\n    }\n\n    var kpPublicKey = Buffer.concat([Buffer.from([0x02 + (recovery & 0x01)]), kpx.toBuffer()])\n    var kp = ECPoint.fromPublicKey(kpPublicKey)\n    if (kp === null) break\n\n    var rInv = sigr.uinvm()\n    var s1 = BN.n.sub(BN.fromBuffer(message)).umul(rInv).ureduce()\n    var s2 = sigs.umul(rInv).ureduce()\n    var point = ECPoint.fromECJPoint(g.mulAdd(s1, kp, s2))\n    return point.toPublicKey(compressed)\n  } while (false)\n\n  throw new Error(messages.ECDSA_RECOVER_FAIL)\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ECPoint.fromPublicKey(publicKey)\n  if (point === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = BN.fromBuffer(privateKey)\n  if (scalar.isOverflow() || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return point.mul(scalar).toPublicKey(compressed)\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar getConfig = require('./default-config');\n\nvar sendRequest = require('./send-request');\n\nvar multiaddr = require('multiaddr');\n\nmodule.exports = function (arg) {\n  var config = getConfig();\n\n  if (typeof arg === 'function') {\n    return arg;\n  } else if (typeof arg === 'object') {\n    return sendRequest(arg);\n  } else if (typeof arg === 'string') {\n    var maddr = multiaddr(arg).nodeAddress();\n    config.host = maddr.address;\n    config.port = maddr.port;\n    return sendRequest(config);\n  } else {\n    throw new Error('Argument must be a send function or a config object.');\n  }\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/utils/module-config.js"],"names":["getConfig","require","sendRequest","multiaddr","module","exports","arg","config","maddr","nodeAddress","host","address","port","Error"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACxB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AAEA,MAAI,OAAOM,GAAP,KAAe,UAAnB,EAA+B;AAC7B,WAAOA,GAAP;AACD,GAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,WAAOJ,WAAW,CAACI,GAAD,CAAlB;AACD,GAFM,MAEA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,QAAME,KAAK,GAAGL,SAAS,CAACG,GAAD,CAAT,CAAeG,WAAf,EAAd;AACAF,IAAAA,MAAM,CAACG,IAAP,GAAcF,KAAK,CAACG,OAApB;AACAJ,IAAAA,MAAM,CAACK,IAAP,GAAcJ,KAAK,CAACI,IAApB;AACA,WAAOV,WAAW,CAACK,MAAD,CAAlB;AACD,GALM,MAKA;AACL,UAAM,IAAIM,KAAJ,CAAU,sDAAV,CAAN;AACD;AACF,CAfD","sourcesContent":["'use strict'\n\nconst getConfig = require('./default-config')\nconst sendRequest = require('./send-request')\nconst multiaddr = require('multiaddr')\n\nmodule.exports = (arg) => {\n  const config = getConfig()\n\n  if (typeof arg === 'function') {\n    return arg\n  } else if (typeof arg === 'object') {\n    return sendRequest(arg)\n  } else if (typeof arg === 'string') {\n    const maddr = multiaddr(arg).nodeAddress()\n    config.host = maddr.address\n    config.port = maddr.port\n    return sendRequest(config)\n  } else {\n    throw new Error('Argument must be a send function or a config object.')\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nmodule.exports = function (args) {\n  var callback = args.pop();\n  var opts = {};\n  var sources = [];\n\n  if (!Array.isArray(args[args.length - 1]) && typeof args[args.length - 1] === 'object') {\n    opts = args.pop();\n  }\n\n  if (args.length === 1 && Array.isArray(args[0])) {\n    // support ipfs.file.cp([src, dest], opts, cb)\n    sources = args[0];\n  } else {\n    // support ipfs.file.cp(src, dest, opts, cb) and ipfs.file.cp(src1, src2, dest, opts, cb)\n    sources = args;\n  }\n\n  return {\n    callback: callback,\n    sources: sources,\n    opts: opts\n  };\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/utils/find-sources.js"],"names":["module","exports","args","callback","pop","opts","sources","Array","isArray","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,MAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,EAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcN,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAlB,CAAD,IAAyC,OAAOP,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAX,KAAiC,QAA9E,EAAwF;AACtFJ,IAAAA,IAAI,GAAGH,IAAI,CAACE,GAAL,EAAP;AACD;;AAED,MAAIF,IAAI,CAACO,MAAL,KAAgB,CAAhB,IAAqBF,KAAK,CAACC,OAAN,CAAcN,IAAI,CAAC,CAAD,CAAlB,CAAzB,EAAiD;AAC/C;AACAI,IAAAA,OAAO,GAAGJ,IAAI,CAAC,CAAD,CAAd;AACD,GAHD,MAGO;AACL;AACAI,IAAAA,OAAO,GAAGJ,IAAV;AACD;;AAED,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELG,IAAAA,OAAO,EAAPA,OAFK;AAGLD,IAAAA,IAAI,EAAJA;AAHK,GAAP;AAKD,CAtBD","sourcesContent":["'use strict'\n\nmodule.exports = (args) => {\n  const callback = args.pop()\n  let opts = {}\n  let sources = []\n\n  if (!Array.isArray(args[args.length - 1]) && typeof args[args.length - 1] === 'object') {\n    opts = args.pop()\n  }\n\n  if (args.length === 1 && Array.isArray(args[0])) {\n    // support ipfs.file.cp([src, dest], opts, cb)\n    sources = args[0]\n  } else {\n    // support ipfs.file.cp(src, dest, opts, cb) and ipfs.file.cp(src1, src2, dest, opts, cb)\n    sources = args\n  }\n\n  return {\n    callback,\n    sources,\n    opts\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
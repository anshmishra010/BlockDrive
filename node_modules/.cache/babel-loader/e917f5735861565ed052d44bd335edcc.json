{"ast":null,"code":"var isPromise = require('is-promise');\n\nvar nextTick;\nif (typeof setImediate === 'function') nextTick = setImediate;else if (typeof process === 'object' && process && process.nextTick) nextTick = process.nextTick;else nextTick = function nextTick(cb) {\n  setTimeout(cb, 0);\n};\nvar extensions = [];\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise)) {\n    return typeof fn === 'function' ? new Promise(fn) : defer();\n  }\n\n  var isResolved = false;\n  var isFulfilled = false;\n  var value;\n  var waiting = [];\n  var running = false;\n\n  function next(skipTimeout) {\n    if (waiting.length) {\n      running = true;\n      waiting.shift()(skipTimeout || false);\n    } else {\n      running = false;\n    }\n  }\n\n  this.then = then;\n\n  function then(cb, eb) {\n    return new Promise(function (resolver) {\n      function done(skipTimeout) {\n        var callback = isFulfilled ? cb : eb;\n\n        if (typeof callback === 'function') {\n          var timeoutDone = function timeoutDone() {\n            var val;\n\n            try {\n              val = callback(value);\n            } catch (ex) {\n              resolver.reject(ex);\n              return next();\n            }\n\n            resolver.fulfill(val);\n            next(true);\n          };\n\n          if (skipTimeout) timeoutDone();else nextTick(timeoutDone);\n        } else if (isFulfilled) {\n          resolver.fulfill(value);\n          next(skipTimeout);\n        } else {\n          resolver.reject(value);\n          next(skipTimeout);\n        }\n      }\n\n      waiting.push(done);\n      if (isResolved && !running) next();\n    });\n  }\n\n  (function () {\n    function fulfill(val) {\n      if (isResolved) return;\n      if (isPromise(val)) val.then(fulfill, reject);else {\n        isResolved = isFulfilled = true;\n        value = val;\n        next();\n      }\n    }\n\n    function reject(err) {\n      if (isResolved) return;\n      isResolved = true;\n      isFulfilled = false;\n      value = err;\n      next();\n    }\n\n    var resolver = {\n      fulfill: fulfill,\n      reject: reject\n    };\n\n    for (var i = 0; i < extensions.length; i++) {\n      extensions[i](this, resolver);\n    }\n\n    if (typeof fn === 'function') {\n      try {\n        fn(resolver);\n      } catch (ex) {\n        resolver.reject(ex);\n      }\n    }\n  })();\n}\n\nfunction defer() {\n  var resolver;\n  var promise = new Promise(function (res) {\n    resolver = res;\n  });\n  return {\n    resolver: resolver,\n    promise: promise\n  };\n}\n\nPromise.use = function (extension) {\n  extensions.push(extension);\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/promise/index.js"],"names":["isPromise","require","nextTick","setImediate","process","cb","setTimeout","extensions","module","exports","Promise","fn","defer","isResolved","isFulfilled","value","waiting","running","next","skipTimeout","length","shift","then","eb","resolver","done","callback","timeoutDone","val","ex","reject","fulfill","push","err","i","promise","res","use","extension"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIC,QAAJ;AACA,IAAI,OAAOC,WAAP,KAAuB,UAA3B,EAAuCD,QAAQ,GAAGC,WAAX,CAAvC,KACK,IAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+BA,OAA/B,IAA0CA,OAAO,CAACF,QAAtD,EAAgEA,QAAQ,GAAGE,OAAO,CAACF,QAAnB,CAAhE,KACAA,QAAQ,GAAG,kBAAUG,EAAV,EAAc;AAAEC,EAAAA,UAAU,CAACD,EAAD,EAAK,CAAL,CAAV;AAAmB,CAA9C;AAEL,IAAIE,UAAU,GAAG,EAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AACA,SAASA,OAAT,CAAiBC,EAAjB,EAAqB;AACnB,MAAI,EAAE,gBAAgBD,OAAlB,CAAJ,EAAgC;AAC9B,WAAO,OAAOC,EAAP,KAAc,UAAd,GAA2B,IAAID,OAAJ,CAAYC,EAAZ,CAA3B,GAA6CC,KAAK,EAAzD;AACD;;AACD,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,WAAW,GAAG,KAAlB;AACA,MAAIC,KAAJ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,KAAd;;AAEA,WAASC,IAAT,CAAcC,WAAd,EAA2B;AACzB,QAAIH,OAAO,CAACI,MAAZ,EAAoB;AAClBH,MAAAA,OAAO,GAAG,IAAV;AACAD,MAAAA,OAAO,CAACK,KAAR,GAAgBF,WAAW,IAAI,KAA/B;AACD,KAHD,MAGO;AACLF,MAAAA,OAAO,GAAG,KAAV;AACD;AACF;;AACD,OAAKK,IAAL,GAAYA,IAAZ;;AACA,WAASA,IAAT,CAAcjB,EAAd,EAAkBkB,EAAlB,EAAsB;AACpB,WAAO,IAAIb,OAAJ,CAAY,UAAUc,QAAV,EAAoB;AACrC,eAASC,IAAT,CAAcN,WAAd,EAA2B;AACzB,YAAIO,QAAQ,GAAGZ,WAAW,GAAGT,EAAH,GAAQkB,EAAlC;;AACA,YAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoC;AAAA,cACzBC,WADyB,GAClC,SAASA,WAAT,GAAuB;AACrB,gBAAIC,GAAJ;;AACA,gBAAI;AACFA,cAAAA,GAAG,GAAGF,QAAQ,CAACX,KAAD,CAAd;AACD,aAFD,CAEE,OAAOc,EAAP,EAAW;AACXL,cAAAA,QAAQ,CAACM,MAAT,CAAgBD,EAAhB;AACA,qBAAOX,IAAI,EAAX;AACD;;AACDM,YAAAA,QAAQ,CAACO,OAAT,CAAiBH,GAAjB;AACAV,YAAAA,IAAI,CAAC,IAAD,CAAJ;AACD,WAXiC;;AAYlC,cAAIC,WAAJ,EAAiBQ,WAAW,GAA5B,KACKzB,QAAQ,CAACyB,WAAD,CAAR;AACN,SAdD,MAcO,IAAIb,WAAJ,EAAiB;AACtBU,UAAAA,QAAQ,CAACO,OAAT,CAAiBhB,KAAjB;AACAG,UAAAA,IAAI,CAACC,WAAD,CAAJ;AACD,SAHM,MAGA;AACLK,UAAAA,QAAQ,CAACM,MAAT,CAAgBf,KAAhB;AACAG,UAAAA,IAAI,CAACC,WAAD,CAAJ;AACD;AACF;;AACDH,MAAAA,OAAO,CAACgB,IAAR,CAAaP,IAAb;AACA,UAAIZ,UAAU,IAAI,CAACI,OAAnB,EAA4BC,IAAI;AACjC,KA3BM,CAAP;AA4BD;;AAEA,eAAY;AACX,aAASa,OAAT,CAAiBH,GAAjB,EAAsB;AACpB,UAAIf,UAAJ,EAAgB;AAChB,UAAIb,SAAS,CAAC4B,GAAD,CAAb,EAAoBA,GAAG,CAACN,IAAJ,CAASS,OAAT,EAAkBD,MAAlB,EAApB,KACK;AACHjB,QAAAA,UAAU,GAAGC,WAAW,GAAG,IAA3B;AACAC,QAAAA,KAAK,GAAGa,GAAR;AACAV,QAAAA,IAAI;AACL;AACF;;AACD,aAASY,MAAT,CAAgBG,GAAhB,EAAqB;AACnB,UAAIpB,UAAJ,EAAgB;AAChBA,MAAAA,UAAU,GAAG,IAAb;AACAC,MAAAA,WAAW,GAAG,KAAd;AACAC,MAAAA,KAAK,GAAGkB,GAAR;AACAf,MAAAA,IAAI;AACL;;AACD,QAAIM,QAAQ,GAAG;AAACO,MAAAA,OAAO,EAAEA,OAAV;AAAmBD,MAAAA,MAAM,EAAEA;AAA3B,KAAf;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,UAAU,CAACa,MAA/B,EAAuCc,CAAC,EAAxC,EAA4C;AAC1C3B,MAAAA,UAAU,CAAC2B,CAAD,CAAV,CAAc,IAAd,EAAoBV,QAApB;AACD;;AACD,QAAI,OAAOb,EAAP,KAAc,UAAlB,EAA8B;AAC5B,UAAI;AACFA,QAAAA,EAAE,CAACa,QAAD,CAAF;AACD,OAFD,CAEE,OAAOK,EAAP,EAAW;AACXL,QAAAA,QAAQ,CAACM,MAAT,CAAgBD,EAAhB;AACD;AACF;AACF,GA5BA,GAAD;AA6BD;;AACD,SAASjB,KAAT,GAAiB;AACf,MAAIY,QAAJ;AACA,MAAIW,OAAO,GAAG,IAAIzB,OAAJ,CAAY,UAAU0B,GAAV,EAAe;AAAEZ,IAAAA,QAAQ,GAAGY,GAAX;AAAgB,GAA7C,CAAd;AACA,SAAO;AAACZ,IAAAA,QAAQ,EAAEA,QAAX;AAAqBW,IAAAA,OAAO,EAAEA;AAA9B,GAAP;AACD;;AACDzB,OAAO,CAAC2B,GAAR,GAAc,UAAUC,SAAV,EAAqB;AACjC/B,EAAAA,UAAU,CAACyB,IAAX,CAAgBM,SAAhB;AACD,CAFD","sourcesContent":["var isPromise = require('is-promise')\r\n\r\nvar nextTick;\r\nif (typeof setImediate === 'function') nextTick = setImediate\r\nelse if (typeof process === 'object' && process && process.nextTick) nextTick = process.nextTick\r\nelse nextTick = function (cb) { setTimeout(cb, 0) }\r\n\r\nvar extensions = [];\r\n\r\nmodule.exports = Promise\r\nfunction Promise(fn) {\r\n  if (!(this instanceof Promise)) {\r\n    return typeof fn === 'function' ? new Promise(fn) : defer()\r\n  }\r\n  var isResolved = false\r\n  var isFulfilled = false\r\n  var value\r\n  var waiting = []\r\n  var running = false\r\n\r\n  function next(skipTimeout) {\r\n    if (waiting.length) {\r\n      running = true\r\n      waiting.shift()(skipTimeout || false)\r\n    } else {\r\n      running = false\r\n    }\r\n  }\r\n  this.then = then;\r\n  function then(cb, eb) {\r\n    return new Promise(function (resolver) {\r\n      function done(skipTimeout) {\r\n        var callback = isFulfilled ? cb : eb\r\n        if (typeof callback === 'function') {\r\n          function timeoutDone() {\r\n            var val;\r\n            try {\r\n              val = callback(value)\r\n            } catch (ex) {\r\n              resolver.reject(ex)\r\n              return next()\r\n            }\r\n            resolver.fulfill(val);\r\n            next(true);\r\n          }\r\n          if (skipTimeout) timeoutDone()\r\n          else nextTick(timeoutDone)\r\n        } else if (isFulfilled) {\r\n          resolver.fulfill(value)\r\n          next(skipTimeout)\r\n        } else {\r\n          resolver.reject(value)\r\n          next(skipTimeout)\r\n        }\r\n      }\r\n      waiting.push(done)\r\n      if (isResolved && !running) next()\r\n    });\r\n  }\r\n  \r\n  (function () {\r\n    function fulfill(val) {\r\n      if (isResolved) return\r\n      if (isPromise(val)) val.then(fulfill, reject)\r\n      else {\r\n        isResolved = isFulfilled = true\r\n        value = val\r\n        next()\r\n      }\r\n    }\r\n    function reject(err) {\r\n      if (isResolved) return\r\n      isResolved = true\r\n      isFulfilled = false\r\n      value = err\r\n      next()\r\n    }\r\n    var resolver = {fulfill: fulfill, reject: reject};\r\n    for (var i = 0; i < extensions.length; i++) {\r\n      extensions[i](this, resolver);\r\n    }\r\n    if (typeof fn === 'function') {\r\n      try {\r\n        fn(resolver)\r\n      } catch (ex) {\r\n        resolver.reject(ex);\r\n      }\r\n    }\r\n  }());\r\n}\r\nfunction defer() {\r\n  var resolver\r\n  var promise = new Promise(function (res) { resolver = res })\r\n  return {resolver: resolver, promise: promise}\r\n}\r\nPromise.use = function (extension) {\r\n  extensions.push(extension);\r\n};"]},"metadata":{},"sourceType":"script"}
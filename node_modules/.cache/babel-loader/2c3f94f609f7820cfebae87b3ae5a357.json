{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar ieee754 = require('ieee754');\n\nvar Bignumber = require('bignumber.js').BigNumber;\n\nvar parser = require('./decoder.asm');\n\nvar utils = require('./utils');\n\nvar c = require('./constants');\n\nvar Simple = require('./simple');\n\nvar Tagged = require('./tagged');\n\nvar _require2 = require('iso-url'),\n    URL = _require2.URL;\n/**\n * Transform binary cbor data into JavaScript objects.\n */\n\n\nvar Decoder = /*#__PURE__*/function () {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  function Decoder(opts) {\n    _classCallCheck(this, Decoder);\n\n    opts = opts || {};\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000;\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size);\n    } // Heap use to share the input with the parser\n\n\n    this._heap = new ArrayBuffer(opts.size);\n    this._heap8 = new Uint8Array(this._heap);\n    this._buffer = Buffer.from(this._heap);\n\n    this._reset(); // Known tags\n\n\n    this._knownTags = Object.assign({\n      0: function _(val) {\n        return new Date(val);\n      },\n      1: function _(val) {\n        return new Date(val * 1000);\n      },\n      2: function _(val) {\n        return utils.arrayBufferToBignumber(val);\n      },\n      3: function _(val) {\n        return c.NEG_ONE.minus(utils.arrayBufferToBignumber(val));\n      },\n      4: function _(v) {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1]);\n      },\n      5: function _(v) {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1]);\n      },\n      32: function _(val) {\n        return new URL(val);\n      },\n      35: function _(val) {\n        return new RegExp(val);\n      }\n    }, opts.tags); // Initialize asm based parser\n\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap);\n  }\n\n  _createClass(Decoder, [{\n    key: \"_closeParent\",\n    // Finish the current parent\n    value: function _closeParent() {\n      var p = this._parents.pop();\n\n      if (p.length > 0) {\n        throw new Error(\"Missing \".concat(p.length, \" elements\"));\n      }\n\n      switch (p.type) {\n        case c.PARENT.TAG:\n          this._push(this.createTag(p.ref[0], p.ref[1]));\n\n          break;\n\n        case c.PARENT.BYTE_STRING:\n          this._push(this.createByteString(p.ref, p.length));\n\n          break;\n\n        case c.PARENT.UTF8_STRING:\n          this._push(this.createUtf8String(p.ref, p.length));\n\n          break;\n\n        case c.PARENT.MAP:\n          if (p.values % 2 > 0) {\n            throw new Error('Odd number of elements in the map');\n          }\n\n          this._push(this.createMap(p.ref, p.length));\n\n          break;\n\n        case c.PARENT.OBJECT:\n          if (p.values % 2 > 0) {\n            throw new Error('Odd number of elements in the map');\n          }\n\n          this._push(this.createObject(p.ref, p.length));\n\n          break;\n\n        case c.PARENT.ARRAY:\n          this._push(this.createArray(p.ref, p.length));\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n        this._dec();\n      }\n    } // Reduce the expected length of the current parent by one\n\n  }, {\n    key: \"_dec\",\n    value: function _dec() {\n      var p = this._currentParent; // The current parent does not know the epxected child length\n\n      if (p.length < 0) {\n        return;\n      }\n\n      p.length--; // All children were seen, we can close the current parent\n\n      if (p.length === 0) {\n        this._closeParent();\n      }\n    } // Push any value to the current parent\n\n  }, {\n    key: \"_push\",\n    value: function _push(val, hasChildren) {\n      var p = this._currentParent;\n      p.values++;\n\n      switch (p.type) {\n        case c.PARENT.ARRAY:\n        case c.PARENT.BYTE_STRING:\n        case c.PARENT.UTF8_STRING:\n          if (p.length > -1) {\n            this._ref[this._ref.length - p.length] = val;\n          } else {\n            this._ref.push(val);\n          }\n\n          this._dec();\n\n          break;\n\n        case c.PARENT.OBJECT:\n          if (p.tmpKey != null) {\n            this._ref[p.tmpKey] = val;\n            p.tmpKey = null;\n\n            this._dec();\n          } else {\n            p.tmpKey = val;\n\n            if (typeof p.tmpKey !== 'string') {\n              // too bad, convert to a Map\n              p.type = c.PARENT.MAP;\n              p.ref = utils.buildMap(p.ref);\n            }\n          }\n\n          break;\n\n        case c.PARENT.MAP:\n          if (p.tmpKey != null) {\n            this._ref.set(p.tmpKey, val);\n\n            p.tmpKey = null;\n\n            this._dec();\n          } else {\n            p.tmpKey = val;\n          }\n\n          break;\n\n        case c.PARENT.TAG:\n          this._ref.push(val);\n\n          if (!hasChildren) {\n            this._dec();\n          }\n\n          break;\n\n        default:\n          throw new Error('Unknown parent type');\n      }\n    } // Create a new parent in the parents list\n\n  }, {\n    key: \"_createParent\",\n    value: function _createParent(obj, type, len) {\n      this._parents[this._depth] = {\n        type: type,\n        length: len,\n        ref: obj,\n        values: 0,\n        tmpKey: null\n      };\n    } // Reset all state back to the beginning, also used for initiatlization\n\n  }, {\n    key: \"_reset\",\n    value: function _reset() {\n      this._res = [];\n      this._parents = [{\n        type: c.PARENT.ARRAY,\n        length: -1,\n        ref: this._res,\n        values: 0,\n        tmpKey: null\n      }];\n    } // -- Interface to customize deoding behaviour\n\n  }, {\n    key: \"createTag\",\n    value: function createTag(tagNumber, value) {\n      var typ = this._knownTags[tagNumber];\n\n      if (!typ) {\n        return new Tagged(tagNumber, value);\n      }\n\n      return typ(value);\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap(obj, len) {\n      return obj;\n    }\n  }, {\n    key: \"createObject\",\n    value: function createObject(obj, len) {\n      return obj;\n    }\n  }, {\n    key: \"createArray\",\n    value: function createArray(arr, len) {\n      return arr;\n    }\n  }, {\n    key: \"createByteString\",\n    value: function createByteString(raw, len) {\n      return Buffer.concat(raw);\n    }\n  }, {\n    key: \"createByteStringFromHeap\",\n    value: function createByteStringFromHeap(start, end) {\n      if (start === end) {\n        return Buffer.alloc(0);\n      }\n\n      return Buffer.from(this._heap.slice(start, end));\n    }\n  }, {\n    key: \"createInt\",\n    value: function createInt(val) {\n      return val;\n    }\n  }, {\n    key: \"createInt32\",\n    value: function createInt32(f, g) {\n      return utils.buildInt32(f, g);\n    }\n  }, {\n    key: \"createInt64\",\n    value: function createInt64(f1, f2, g1, g2) {\n      return utils.buildInt64(f1, f2, g1, g2);\n    }\n  }, {\n    key: \"createFloat\",\n    value: function createFloat(val) {\n      return val;\n    }\n  }, {\n    key: \"createFloatSingle\",\n    value: function createFloatSingle(a, b, c, d) {\n      return ieee754.read([a, b, c, d], 0, false, 23, 4);\n    }\n  }, {\n    key: \"createFloatDouble\",\n    value: function createFloatDouble(a, b, c, d, e, f, g, h) {\n      return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8);\n    }\n  }, {\n    key: \"createInt32Neg\",\n    value: function createInt32Neg(f, g) {\n      return -1 - utils.buildInt32(f, g);\n    }\n  }, {\n    key: \"createInt64Neg\",\n    value: function createInt64Neg(f1, f2, g1, g2) {\n      var f = utils.buildInt32(f1, f2);\n      var g = utils.buildInt32(g1, g2);\n\n      if (f > c.MAX_SAFE_HIGH) {\n        return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g));\n      }\n\n      return -1 - (f * c.SHIFT32 + g);\n    }\n  }, {\n    key: \"createTrue\",\n    value: function createTrue() {\n      return true;\n    }\n  }, {\n    key: \"createFalse\",\n    value: function createFalse() {\n      return false;\n    }\n  }, {\n    key: \"createNull\",\n    value: function createNull() {\n      return null;\n    }\n  }, {\n    key: \"createUndefined\",\n    value: function createUndefined() {\n      return undefined;\n    }\n  }, {\n    key: \"createInfinity\",\n    value: function createInfinity() {\n      return Infinity;\n    }\n  }, {\n    key: \"createInfinityNeg\",\n    value: function createInfinityNeg() {\n      return -Infinity;\n    }\n  }, {\n    key: \"createNaN\",\n    value: function createNaN() {\n      return NaN;\n    }\n  }, {\n    key: \"createNaNNeg\",\n    value: function createNaNNeg() {\n      return -NaN;\n    }\n  }, {\n    key: \"createUtf8String\",\n    value: function createUtf8String(raw, len) {\n      return raw.join('');\n    }\n  }, {\n    key: \"createUtf8StringFromHeap\",\n    value: function createUtf8StringFromHeap(start, end) {\n      if (start === end) {\n        return '';\n      }\n\n      return this._buffer.toString('utf8', start, end);\n    }\n  }, {\n    key: \"createSimpleUnassigned\",\n    value: function createSimpleUnassigned(val) {\n      return new Simple(val);\n    } // -- Interface for decoder.asm.js\n\n  }, {\n    key: \"pushInt\",\n    value: function pushInt(val) {\n      this._push(this.createInt(val));\n    }\n  }, {\n    key: \"pushInt32\",\n    value: function pushInt32(f, g) {\n      this._push(this.createInt32(f, g));\n    }\n  }, {\n    key: \"pushInt64\",\n    value: function pushInt64(f1, f2, g1, g2) {\n      this._push(this.createInt64(f1, f2, g1, g2));\n    }\n  }, {\n    key: \"pushFloat\",\n    value: function pushFloat(val) {\n      this._push(this.createFloat(val));\n    }\n  }, {\n    key: \"pushFloatSingle\",\n    value: function pushFloatSingle(a, b, c, d) {\n      this._push(this.createFloatSingle(a, b, c, d));\n    }\n  }, {\n    key: \"pushFloatDouble\",\n    value: function pushFloatDouble(a, b, c, d, e, f, g, h) {\n      this._push(this.createFloatDouble(a, b, c, d, e, f, g, h));\n    }\n  }, {\n    key: \"pushInt32Neg\",\n    value: function pushInt32Neg(f, g) {\n      this._push(this.createInt32Neg(f, g));\n    }\n  }, {\n    key: \"pushInt64Neg\",\n    value: function pushInt64Neg(f1, f2, g1, g2) {\n      this._push(this.createInt64Neg(f1, f2, g1, g2));\n    }\n  }, {\n    key: \"pushTrue\",\n    value: function pushTrue() {\n      this._push(this.createTrue());\n    }\n  }, {\n    key: \"pushFalse\",\n    value: function pushFalse() {\n      this._push(this.createFalse());\n    }\n  }, {\n    key: \"pushNull\",\n    value: function pushNull() {\n      this._push(this.createNull());\n    }\n  }, {\n    key: \"pushUndefined\",\n    value: function pushUndefined() {\n      this._push(this.createUndefined());\n    }\n  }, {\n    key: \"pushInfinity\",\n    value: function pushInfinity() {\n      this._push(this.createInfinity());\n    }\n  }, {\n    key: \"pushInfinityNeg\",\n    value: function pushInfinityNeg() {\n      this._push(this.createInfinityNeg());\n    }\n  }, {\n    key: \"pushNaN\",\n    value: function pushNaN() {\n      this._push(this.createNaN());\n    }\n  }, {\n    key: \"pushNaNNeg\",\n    value: function pushNaNNeg() {\n      this._push(this.createNaNNeg());\n    }\n  }, {\n    key: \"pushArrayStart\",\n    value: function pushArrayStart() {\n      this._createParent([], c.PARENT.ARRAY, -1);\n    }\n  }, {\n    key: \"pushArrayStartFixed\",\n    value: function pushArrayStartFixed(len) {\n      this._createArrayStartFixed(len);\n    }\n  }, {\n    key: \"pushArrayStartFixed32\",\n    value: function pushArrayStartFixed32(len1, len2) {\n      var len = utils.buildInt32(len1, len2);\n\n      this._createArrayStartFixed(len);\n    }\n  }, {\n    key: \"pushArrayStartFixed64\",\n    value: function pushArrayStartFixed64(len1, len2, len3, len4) {\n      var len = utils.buildInt64(len1, len2, len3, len4);\n\n      this._createArrayStartFixed(len);\n    }\n  }, {\n    key: \"pushObjectStart\",\n    value: function pushObjectStart() {\n      this._createObjectStartFixed(-1);\n    }\n  }, {\n    key: \"pushObjectStartFixed\",\n    value: function pushObjectStartFixed(len) {\n      this._createObjectStartFixed(len);\n    }\n  }, {\n    key: \"pushObjectStartFixed32\",\n    value: function pushObjectStartFixed32(len1, len2) {\n      var len = utils.buildInt32(len1, len2);\n\n      this._createObjectStartFixed(len);\n    }\n  }, {\n    key: \"pushObjectStartFixed64\",\n    value: function pushObjectStartFixed64(len1, len2, len3, len4) {\n      var len = utils.buildInt64(len1, len2, len3, len4);\n\n      this._createObjectStartFixed(len);\n    }\n  }, {\n    key: \"pushByteStringStart\",\n    value: function pushByteStringStart() {\n      this._parents[this._depth] = {\n        type: c.PARENT.BYTE_STRING,\n        length: -1,\n        ref: [],\n        values: 0,\n        tmpKey: null\n      };\n    }\n  }, {\n    key: \"pushByteString\",\n    value: function pushByteString(start, end) {\n      this._push(this.createByteStringFromHeap(start, end));\n    }\n  }, {\n    key: \"pushUtf8StringStart\",\n    value: function pushUtf8StringStart() {\n      this._parents[this._depth] = {\n        type: c.PARENT.UTF8_STRING,\n        length: -1,\n        ref: [],\n        values: 0,\n        tmpKey: null\n      };\n    }\n  }, {\n    key: \"pushUtf8String\",\n    value: function pushUtf8String(start, end) {\n      this._push(this.createUtf8StringFromHeap(start, end));\n    }\n  }, {\n    key: \"pushSimpleUnassigned\",\n    value: function pushSimpleUnassigned(val) {\n      this._push(this.createSimpleUnassigned(val));\n    }\n  }, {\n    key: \"pushTagStart\",\n    value: function pushTagStart(tag) {\n      this._parents[this._depth] = {\n        type: c.PARENT.TAG,\n        length: 1,\n        ref: [tag]\n      };\n    }\n  }, {\n    key: \"pushTagStart4\",\n    value: function pushTagStart4(f, g) {\n      this.pushTagStart(utils.buildInt32(f, g));\n    }\n  }, {\n    key: \"pushTagStart8\",\n    value: function pushTagStart8(f1, f2, g1, g2) {\n      this.pushTagStart(utils.buildInt64(f1, f2, g1, g2));\n    }\n  }, {\n    key: \"pushTagUnassigned\",\n    value: function pushTagUnassigned(tagNumber) {\n      this._push(this.createTag(tagNumber));\n    }\n  }, {\n    key: \"pushBreak\",\n    value: function pushBreak() {\n      if (this._currentParent.length > -1) {\n        throw new Error('Unexpected break');\n      }\n\n      this._closeParent();\n    }\n  }, {\n    key: \"_createObjectStartFixed\",\n    value: function _createObjectStartFixed(len) {\n      if (len === 0) {\n        this._push(this.createObject({}));\n\n        return;\n      }\n\n      this._createParent({}, c.PARENT.OBJECT, len);\n    }\n  }, {\n    key: \"_createArrayStartFixed\",\n    value: function _createArrayStartFixed(len) {\n      if (len === 0) {\n        this._push(this.createArray([]));\n\n        return;\n      }\n\n      this._createParent(new Array(len), c.PARENT.ARRAY, len);\n    }\n  }, {\n    key: \"_decode\",\n    value: function _decode(input) {\n      if (input.byteLength === 0) {\n        throw new Error('Input too short');\n      }\n\n      this._reset();\n\n      this._heap8.set(input);\n\n      var code = this.parser.parse(input.byteLength);\n\n      if (this._depth > 1) {\n        while (this._currentParent.length === 0) {\n          this._closeParent();\n        }\n\n        if (this._depth > 1) {\n          throw new Error('Undeterminated nesting');\n        }\n      }\n\n      if (code > 0) {\n        throw new Error('Failed to parse');\n      }\n\n      if (this._res.length === 0) {\n        throw new Error('No valid result');\n      }\n    } // -- Public Interface\n\n  }, {\n    key: \"decodeFirst\",\n    value: function decodeFirst(input) {\n      this._decode(input);\n\n      return this._res[0];\n    }\n  }, {\n    key: \"decodeAll\",\n    value: function decodeAll(input) {\n      this._decode(input);\n\n      return this._res;\n    }\n    /**\n     * Decode the first cbor object.\n     *\n     * @param {Buffer|string} input\n     * @param {string} [enc='hex'] - Encoding used if a string is passed.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"_depth\",\n    get: function get() {\n      return this._parents.length;\n    }\n  }, {\n    key: \"_currentParent\",\n    get: function get() {\n      return this._parents[this._depth - 1];\n    }\n  }, {\n    key: \"_ref\",\n    get: function get() {\n      return this._currentParent.ref;\n    }\n  }], [{\n    key: \"decode\",\n    value: function decode(input, enc) {\n      if (typeof input === 'string') {\n        input = Buffer.from(input, enc || 'hex');\n      }\n\n      var dec = new Decoder({\n        size: input.length\n      });\n      return dec.decodeFirst(input);\n    }\n    /**\n     * Decode all cbor objects.\n     *\n     * @param {Buffer|string} input\n     * @param {string} [enc='hex'] - Encoding used if a string is passed.\n     * @returns {Array<*>}\n     */\n\n  }, {\n    key: \"decodeAll\",\n    value: function decodeAll(input, enc) {\n      if (typeof input === 'string') {\n        input = Buffer.from(input, enc || 'hex');\n      }\n\n      var dec = new Decoder({\n        size: input.length\n      });\n      return dec.decodeAll(input);\n    }\n  }]);\n\n  return Decoder;\n}();\n\nDecoder.decodeFirst = Decoder.decode;\nmodule.exports = Decoder;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/borc/src/decoder.js"],"names":["require","Buffer","ieee754","Bignumber","BigNumber","parser","utils","c","Simple","Tagged","URL","Decoder","opts","size","nextPowerOf2","_heap","ArrayBuffer","_heap8","Uint8Array","_buffer","from","_reset","_knownTags","Object","assign","val","Date","arrayBufferToBignumber","NEG_ONE","minus","v","TEN","pow","times","TWO","RegExp","tags","global","log","console","bind","pushInt","pushInt32","pushInt32Neg","pushInt64","pushInt64Neg","pushFloat","pushFloatSingle","pushFloatDouble","pushTrue","pushFalse","pushUndefined","pushNull","pushInfinity","pushInfinityNeg","pushNaN","pushNaNNeg","pushArrayStart","pushArrayStartFixed","pushArrayStartFixed32","pushArrayStartFixed64","pushObjectStart","pushObjectStartFixed","pushObjectStartFixed32","pushObjectStartFixed64","pushByteString","pushByteStringStart","pushUtf8String","pushUtf8StringStart","pushSimpleUnassigned","pushTagUnassigned","pushTagStart","pushTagStart4","pushTagStart8","pushBreak","p","_parents","pop","length","Error","type","PARENT","TAG","_push","createTag","ref","BYTE_STRING","createByteString","UTF8_STRING","createUtf8String","MAP","values","createMap","OBJECT","createObject","ARRAY","createArray","_currentParent","_dec","_closeParent","hasChildren","_ref","push","tmpKey","buildMap","set","obj","len","_depth","_res","tagNumber","value","typ","arr","raw","concat","start","end","alloc","slice","f","g","buildInt32","f1","f2","g1","g2","buildInt64","a","b","d","read","e","h","MAX_SAFE_HIGH","SHIFT32","plus","undefined","Infinity","NaN","join","toString","createInt","createInt32","createInt64","createFloat","createFloatSingle","createFloatDouble","createInt32Neg","createInt64Neg","createTrue","createFalse","createNull","createUndefined","createInfinity","createInfinityNeg","createNaN","createNaNNeg","_createParent","_createArrayStartFixed","len1","len2","len3","len4","_createObjectStartFixed","createByteStringFromHeap","createUtf8StringFromHeap","createSimpleUnassigned","tag","Array","input","byteLength","code","parse","_decode","enc","dec","decodeFirst","decodeAll","decode","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n"]},"metadata":{},"sourceType":"script"}
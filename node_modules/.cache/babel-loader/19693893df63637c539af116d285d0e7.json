{"ast":null,"code":"var capability = require('./capability');\n\nvar inherits = require('inherits');\n\nvar IncomingMessage = require('./incoming-message');\n\nvar stream = require('readable-stream');\n\nvar fetch = self.fetch;\n\nvar ClientRequest = module.exports = function (opts) {\n  var _this = this;\n\n  stream.Writable.call(this);\n  this._opts = opts;\n  this._body = [];\n  this._headers = {};\n  if (opts.auth) this.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'));\n  Object.keys(opts.headers).forEach(function (name) {\n    _this.setHeader(name, opts.headers[name]);\n  });\n  this._mode = 'fetch';\n  this._fetchTimer = null;\n  this.on('finish', function () {\n    return _this._onFinish();\n  });\n};\n\ninherits(ClientRequest, stream.Writable);\n\nClientRequest.prototype.setHeader = function (name, value) {\n  var lowerName = name.toLowerCase(); // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n  // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n  // http-browserify did it, so I will too.\n\n  if (unsafeHeaders.indexOf(lowerName) !== -1) {\n    return;\n  }\n\n  this._headers[lowerName] = value;\n};\n\nClientRequest.prototype.getHeader = function (name) {\n  var header = this._headers[name.toLowerCase()];\n\n  if (header) return header.value;\n  return null;\n};\n\nClientRequest.prototype.removeHeader = function (name) {\n  delete this._headers[name.toLowerCase()];\n};\n\nClientRequest.prototype._onFinish = function () {\n  var _this2 = this;\n\n  if (this._destroyed) return;\n  var opts = this._opts;\n  var headersObj = this._headers;\n  var body = null;\n\n  if (opts.method !== 'GET' && opts.method !== 'HEAD') {\n    body = new Blob(this._body, {\n      type: (headersObj['content-type'] || {}).value || ''\n    });\n  }\n\n  var signal = null;\n\n  if (capability.abortController) {\n    var controller = new AbortController();\n    signal = controller.signal;\n    this._fetchAbortController = controller;\n\n    if ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n      this._fetchTimer = setTimeout(function () {\n        _this2.emit('requestTimeout');\n\n        if (_this2._fetchAbortController) _this2._fetchAbortController.abort();\n      }, opts.requestTimeout);\n    }\n  }\n\n  fetch(this._opts.url, {\n    method: this._opts.method,\n    headers: this._headers,\n    body: body || undefined,\n    mode: 'cors',\n    credentials: opts.withCredentials ? 'include' : 'same-origin',\n    signal: signal\n  }).then(function (response) {\n    _this2._fetchResponse = response;\n\n    _this2._connect();\n  }, function (reason) {\n    clearTimeout(_this2._fetchTimer);\n    if (!_this2._destroyed) _this2.emit('error', reason);\n  });\n};\n\nClientRequest.prototype._connect = function () {\n  var _this3 = this;\n\n  if (this._destroyed) return;\n  this._response = new IncomingMessage(this._fetchResponse, this._mode, this._fetchTimer);\n\n  this._response.on('error', function (err) {\n    return _this3.emit('error', err);\n  });\n\n  this.emit('response', this._response);\n};\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n  this._body.push(chunk);\n\n  cb();\n};\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n  this._destroyed = true;\n  clearTimeout(this._fetchTimer);\n  if (this._response) this._response._destroyed = true;\n  if (this._xhr) this._xhr.abort();else if (this._fetchAbortController) this._fetchAbortController.abort();\n};\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n  if (typeof data === 'function') {\n    cb = data;\n    data = undefined;\n  }\n\n  stream.Writable.prototype.end.call(this, data, encoding, cb);\n};\n\nClientRequest.prototype.flushHeaders = function () {};\n\nClientRequest.prototype.setTimeout = function () {};\n\nClientRequest.prototype.setNoDelay = function () {};\n\nClientRequest.prototype.setSocketKeepAlive = function () {}; // Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\n\n\nvar unsafeHeaders = ['accept-charset', 'accept-encoding', 'access-control-request-headers', 'access-control-request-method', 'connection', 'content-length', 'cookie', 'cookie2', 'date', 'dnt', 'expect', 'host', 'keep-alive', 'origin', 'referer', 'te', 'trailer', 'transfer-encoding', 'upgrade', 'via'];","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/iso-stream-http/lib/request.js"],"names":["capability","require","inherits","IncomingMessage","stream","fetch","self","ClientRequest","module","exports","opts","Writable","call","_opts","_body","_headers","auth","setHeader","Buffer","from","toString","Object","keys","headers","forEach","name","_mode","_fetchTimer","on","_onFinish","prototype","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","Blob","type","signal","abortController","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","url","undefined","mode","credentials","withCredentials","then","response","_fetchResponse","_connect","reason","clearTimeout","_response","err","_write","chunk","encoding","cb","push","destroy","_xhr","end","data","flushHeaders","setNoDelay","setSocketKeepAlive"],"mappings":"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","sourcesContent":["var capability = require('./capability')\nvar inherits = require('inherits')\nvar IncomingMessage = require('./incoming-message')\nvar stream = require('readable-stream')\n\nvar fetch = self.fetch\n\nvar ClientRequest = module.exports = function (opts) {\n\tstream.Writable.call(this)\n\n\tthis._opts = opts\n\tthis._body = []\n\tthis._headers = {}\n\tif (opts.auth)\n\t\tthis.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\n\n\tObject.keys(opts.headers).forEach(name => {\n\t\tthis.setHeader(name, opts.headers[name])\n\t})\n\n\tthis._mode = 'fetch'\n\tthis._fetchTimer = null\n\n\tthis.on('finish',  () => this._onFinish())\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1){\n\t\treturn\n\t}\n\tthis._headers[lowerName] = value\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tdelete this._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tif (this._destroyed)\n\t\treturn\n\tvar opts = this._opts\n\n\tvar headersObj = this._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(this._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\tvar signal = null\n\tif (capability.abortController) {\n\t\tvar controller = new AbortController()\n\t\tsignal = controller.signal\n\t\tthis._fetchAbortController = controller\n\n\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\tthis._fetchTimer = setTimeout(() => {\n\t\t\t\tthis.emit('requestTimeout')\n\t\t\t\tif (this._fetchAbortController)\n\t\t\t\t\tthis._fetchAbortController.abort()\n\t\t\t}, opts.requestTimeout)\n\t\t}\n\t}\n\n\tfetch(this._opts.url, {\n\t\tmethod: this._opts.method,\n\t\theaders: this._headers,\n\t\tbody: body || undefined,\n\t\tmode: 'cors',\n\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\tsignal: signal\n\t})\n\t.then(response => {\n\t\tthis._fetchResponse = response\n\t\tthis._connect()\n\t}, reason => {\n\t\tclearTimeout(this._fetchTimer)\n\t\tif (!this._destroyed)\n\t\t\tthis.emit('error', reason)\n\t})\n}\n\nClientRequest.prototype._connect = function () {\n\tif (this._destroyed)\n\t\treturn\n\n\tthis._response = new IncomingMessage(this._fetchResponse, this._mode, this._fetchTimer)\n\tthis._response.on('error', (err) => this.emit('error', err))\n\n\tthis.emit('response', this._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tthis._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tthis._destroyed = true\n\n\t\n\tclearTimeout(this._fetchTimer)\n\t\n\tif (this._response)\n\t\tthis._response._destroyed = true\n\tif (this._xhr)\n\t\tthis._xhr.abort()\n\telse if (this._fetchAbortController)\n\t\tthis._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(this, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n"]},"metadata":{},"sourceType":"script"}
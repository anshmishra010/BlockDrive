{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar TransformStream = require('readable-stream').Transform;\n/*\n  Transforms a stream of {Name, Hash} objects to include size\n  of the DAG object.\n\n  Usage: inputStream.pipe(new FileResultStreamConverter())\n\n  Input object format:\n  {\n    Name: '/path/to/file/foo.txt',\n    Hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP'\n    Size: '20'\n  }\n\n  Output object format:\n  {\n    path: '/path/to/file/foo.txt',\n    hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP',\n    size: 20\n  }\n*/\n\n\nvar FileResultStreamConverter = /*#__PURE__*/function (_TransformStream) {\n  _inherits(FileResultStreamConverter, _TransformStream);\n\n  var _super = _createSuper(FileResultStreamConverter);\n\n  function FileResultStreamConverter(options) {\n    _classCallCheck(this, FileResultStreamConverter);\n\n    var opts = Object.assign({}, options || {}, {\n      objectMode: true\n    });\n    return _super.call(this, opts);\n  }\n\n  _createClass(FileResultStreamConverter, [{\n    key: \"_transform\",\n    value: function _transform(obj, enc, callback) {\n      if (!obj.Hash) {\n        return callback();\n      }\n\n      callback(null, {\n        path: obj.Name,\n        hash: obj.Hash,\n        size: parseInt(obj.Size, 10)\n      });\n    }\n  }]);\n\n  return FileResultStreamConverter;\n}(TransformStream);\n\nmodule.exports = FileResultStreamConverter;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/utils/file-result-stream-converter.js"],"names":["TransformStream","require","Transform","FileResultStreamConverter","options","opts","Object","assign","objectMode","obj","enc","callback","Hash","path","Name","hash","size","parseInt","Size","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,SAAnD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMC,yB;;;;;AACJ,qCAAaC,OAAb,EAAsB;AAAA;;AACpB,QAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAO,IAAI,EAA7B,EAAiC;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAAjC,CAAb;AADoB,6BAEdH,IAFc;AAGrB;;;;+BAEWI,G,EAAKC,G,EAAKC,Q,EAAU;AAC9B,UAAI,CAACF,GAAG,CAACG,IAAT,EAAe;AACb,eAAOD,QAAQ,EAAf;AACD;;AAEDA,MAAAA,QAAQ,CAAC,IAAD,EAAO;AACbE,QAAAA,IAAI,EAAEJ,GAAG,CAACK,IADG;AAEbC,QAAAA,IAAI,EAAEN,GAAG,CAACG,IAFG;AAGbI,QAAAA,IAAI,EAAEC,QAAQ,CAACR,GAAG,CAACS,IAAL,EAAW,EAAX;AAHD,OAAP,CAAR;AAKD;;;;EAhBqClB,e;;AAmBxCmB,MAAM,CAACC,OAAP,GAAiBjB,yBAAjB","sourcesContent":["'use strict'\n\nconst TransformStream = require('readable-stream').Transform\n\n/*\n  Transforms a stream of {Name, Hash} objects to include size\n  of the DAG object.\n\n  Usage: inputStream.pipe(new FileResultStreamConverter())\n\n  Input object format:\n  {\n    Name: '/path/to/file/foo.txt',\n    Hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP'\n    Size: '20'\n  }\n\n  Output object format:\n  {\n    path: '/path/to/file/foo.txt',\n    hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP',\n    size: 20\n  }\n*/\nclass FileResultStreamConverter extends TransformStream {\n  constructor (options) {\n    const opts = Object.assign({}, options || {}, { objectMode: true })\n    super(opts)\n  }\n\n  _transform (obj, enc, callback) {\n    if (!obj.Hash) {\n      return callback()\n    }\n\n    callback(null, {\n      path: obj.Name,\n      hash: obj.Hash,\n      size: parseInt(obj.Size, 10)\n    })\n  }\n}\n\nmodule.exports = FileResultStreamConverter\n"]},"metadata":{},"sourceType":"script"}
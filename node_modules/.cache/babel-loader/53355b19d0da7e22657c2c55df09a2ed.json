{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar BN = require('./bn');\n\nvar ECPoint = require('./ecpoint');\n\nvar ECJPoint = require('./ecjpoint');\n\nfunction ECPointG() {\n  this.x = BN.fromBuffer(Buffer.from('79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798', 'hex'));\n  this.y = BN.fromBuffer(Buffer.from('483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8', 'hex'));\n  this.inf = false;\n\n  this._precompute();\n}\n\nECPointG.prototype._precompute = function () {\n  var ecpoint = new ECPoint(this.x, this.y);\n  var dstep = 4;\n  var points = new Array(1 + Math.ceil(257 / dstep));\n  var acc = points[0] = ecpoint;\n\n  for (var i = 1; i < points.length; ++i) {\n    for (var j = 0; j < dstep; j++) {\n      acc = acc.dbl();\n    }\n\n    points[i] = acc;\n  }\n\n  this.precomputed = {\n    naf: ecpoint._getNAFPoints(7),\n    doubles: {\n      step: dstep,\n      points: points,\n      negpoints: points.map(function (p) {\n        return p.neg();\n      })\n    }\n  };\n};\n\nECPointG.prototype.mul = function (num) {\n  // Algorithm 3.42 Fixed-base NAF windowing method for point multiplication\n  var step = this.precomputed.doubles.step;\n  var points = this.precomputed.doubles.points;\n  var negpoints = this.precomputed.doubles.negpoints;\n  var naf = num.getNAF(1);\n  var I = ((1 << step + 1) - (step % 2 === 0 ? 2 : 1)) / 3; // Translate into more windowed form\n\n  var repr = [];\n\n  for (var j = 0; j < naf.length; j += step) {\n    var nafW = 0;\n\n    for (var k = j + step - 1; k >= j; k--) {\n      nafW = (nafW << 1) + naf[k];\n    }\n\n    repr.push(nafW);\n  }\n\n  var a = new ECJPoint(null, null, null);\n  var b = new ECJPoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (var jj = 0; jj < repr.length; jj++) {\n      if (repr[jj] === i) {\n        b = b.mixedAdd(points[jj]);\n      } else if (repr[jj] === -i) {\n        b = b.mixedAdd(negpoints[jj]);\n      }\n    }\n\n    a = a.add(b);\n  }\n\n  return ECPoint.fromECJPoint(a);\n};\n\nECPointG.prototype.mulAdd = function (k1, p2, k2) {\n  var nafPointsP1 = this.precomputed.naf;\n\n  var nafPointsP2 = p2._getNAFPoints1();\n\n  var wnd = [nafPointsP1.points, nafPointsP2.points];\n  var naf = [k1.getNAF(nafPointsP1.wnd), k2.getNAF(nafPointsP2.wnd)];\n  var acc = new ECJPoint(null, null, null);\n  var tmp = [null, null];\n\n  for (var i = Math.max(naf[0].length, naf[1].length); i >= 0; i--) {\n    var k = 0;\n\n    for (; i >= 0; ++k, --i) {\n      tmp[0] = naf[0][i] | 0;\n      tmp[1] = naf[1][i] | 0;\n      if (tmp[0] !== 0 || tmp[1] !== 0) break;\n    }\n\n    if (i >= 0) k += 1;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (var jj = 0; jj < 2; jj++) {\n      var z = tmp[jj];\n      var p;\n\n      if (z === 0) {\n        continue;\n      } else if (z > 0) {\n        p = wnd[jj][z >> 1];\n      } else if (z < 0) {\n        p = wnd[jj][-z >> 1].neg();\n      } // hack: ECPoint detection\n\n\n      if (p.z === undefined) {\n        acc = acc.mixedAdd(p);\n      } else {\n        acc = acc.add(p);\n      }\n    }\n  }\n\n  return acc;\n};\n\nmodule.exports = new ECPointG();","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/libp2p-crypto-secp256k1/node_modules/secp256k1/lib/js/ecpointg.js"],"names":["Buffer","require","BN","ECPoint","ECJPoint","ECPointG","x","fromBuffer","from","y","inf","_precompute","prototype","ecpoint","dstep","points","Array","Math","ceil","acc","i","length","j","dbl","precomputed","naf","_getNAFPoints","doubles","step","negpoints","map","p","neg","mul","num","getNAF","I","repr","nafW","k","push","a","b","jj","mixedAdd","add","fromECJPoint","mulAdd","k1","p2","k2","nafPointsP1","nafPointsP2","_getNAFPoints1","wnd","tmp","max","dblp","z","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar BN = require('./bn')\nvar ECPoint = require('./ecpoint')\nvar ECJPoint = require('./ecjpoint')\n\nfunction ECPointG () {\n  this.x = BN.fromBuffer(Buffer.from('79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798', 'hex'))\n  this.y = BN.fromBuffer(Buffer.from('483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8', 'hex'))\n  this.inf = false\n\n  this._precompute()\n}\n\nECPointG.prototype._precompute = function () {\n  var ecpoint = new ECPoint(this.x, this.y)\n\n  var dstep = 4\n  var points = new Array(1 + Math.ceil(257 / dstep))\n  var acc = points[0] = ecpoint\n  for (var i = 1; i < points.length; ++i) {\n    for (var j = 0; j < dstep; j++) acc = acc.dbl()\n    points[i] = acc\n  }\n\n  this.precomputed = {\n    naf: ecpoint._getNAFPoints(7),\n    doubles: {\n      step: dstep,\n      points: points,\n      negpoints: points.map(function (p) { return p.neg() })\n    }\n  }\n}\n\nECPointG.prototype.mul = function (num) {\n  // Algorithm 3.42 Fixed-base NAF windowing method for point multiplication\n  var step = this.precomputed.doubles.step\n  var points = this.precomputed.doubles.points\n  var negpoints = this.precomputed.doubles.negpoints\n\n  var naf = num.getNAF(1)\n  var I = ((1 << (step + 1)) - (step % 2 === 0 ? 2 : 1)) / 3\n\n  // Translate into more windowed form\n  var repr = []\n  for (var j = 0; j < naf.length; j += step) {\n    var nafW = 0\n    for (var k = j + step - 1; k >= j; k--) nafW = (nafW << 1) + naf[k]\n    repr.push(nafW)\n  }\n\n  var a = new ECJPoint(null, null, null)\n  var b = new ECJPoint(null, null, null)\n  for (var i = I; i > 0; i--) {\n    for (var jj = 0; jj < repr.length; jj++) {\n      if (repr[jj] === i) {\n        b = b.mixedAdd(points[jj])\n      } else if (repr[jj] === -i) {\n        b = b.mixedAdd(negpoints[jj])\n      }\n    }\n\n    a = a.add(b)\n  }\n\n  return ECPoint.fromECJPoint(a)\n}\n\nECPointG.prototype.mulAdd = function (k1, p2, k2) {\n  var nafPointsP1 = this.precomputed.naf\n  var nafPointsP2 = p2._getNAFPoints1()\n  var wnd = [nafPointsP1.points, nafPointsP2.points]\n  var naf = [k1.getNAF(nafPointsP1.wnd), k2.getNAF(nafPointsP2.wnd)]\n\n  var acc = new ECJPoint(null, null, null)\n  var tmp = [null, null]\n  for (var i = Math.max(naf[0].length, naf[1].length); i >= 0; i--) {\n    var k = 0\n\n    for (; i >= 0; ++k, --i) {\n      tmp[0] = naf[0][i] | 0\n      tmp[1] = naf[1][i] | 0\n\n      if (tmp[0] !== 0 || tmp[1] !== 0) break\n    }\n\n    if (i >= 0) k += 1\n    acc = acc.dblp(k)\n\n    if (i < 0) break\n\n    for (var jj = 0; jj < 2; jj++) {\n      var z = tmp[jj]\n      var p\n      if (z === 0) {\n        continue\n      } else if (z > 0) {\n        p = wnd[jj][z >> 1]\n      } else if (z < 0) {\n        p = wnd[jj][-z >> 1].neg()\n      }\n\n      // hack: ECPoint detection\n      if (p.z === undefined) {\n        acc = acc.mixedAdd(p)\n      } else {\n        acc = acc.add(p)\n      }\n    }\n  }\n\n  return acc\n}\n\nmodule.exports = new ECPointG()\n"]},"metadata":{},"sourceType":"script"}
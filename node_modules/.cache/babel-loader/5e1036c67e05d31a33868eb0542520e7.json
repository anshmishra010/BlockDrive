{"ast":null,"code":"'use strict';\n/**\n * Adds a link with its name as property to an object.\n *\n * The link won't be added if its name is empty or matches one of the existing\n * properties.\n *\n * @param {Object} object - The object that contains an array of links\n * @param {string} name - The name of the link to add\n * @param {numner} position - The position within the array of links\n */\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar addNamedLink = function addNamedLink(object, name, position) {\n  var skipNames = [''].concat(_toConsumableArray(Object.keys(object)));\n\n  if (skipNames.includes(name)) {\n    return;\n  }\n\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    configurable: true,\n    get: function get() {\n      return object._links[position].Hash;\n    }\n  });\n};\n\nmodule.exports = addNamedLink;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipld-dag-pb/src/dag-node/addNamedLink.js"],"names":["addNamedLink","object","name","position","skipNames","Object","keys","includes","defineProperty","enumerable","configurable","get","_links","Hash","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,EAA4B;AAC/C,MAAMC,SAAS,IAAI,EAAJ,4BAAWC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAX,EAAf;;AACA,MAAIG,SAAS,CAACG,QAAV,CAAmBL,IAAnB,CAAJ,EAA8B;AAC5B;AACD;;AACDG,EAAAA,MAAM,CAACG,cAAP,CAAsBP,MAAtB,EAA8BC,IAA9B,EAAoC;AAClCO,IAAAA,UAAU,EAAE,IADsB;AAElCC,IAAAA,YAAY,EAAE,IAFoB;AAGlCC,IAAAA,GAAG,EAAE;AAAA,aAAMV,MAAM,CAACW,MAAP,CAAcT,QAAd,EAAwBU,IAA9B;AAAA;AAH6B,GAApC;AAKD,CAVD;;AAYAC,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["'use strict'\n\n/**\n * Adds a link with its name as property to an object.\n *\n * The link won't be added if its name is empty or matches one of the existing\n * properties.\n *\n * @param {Object} object - The object that contains an array of links\n * @param {string} name - The name of the link to add\n * @param {numner} position - The position within the array of links\n */\nconst addNamedLink = (object, name, position) => {\n  const skipNames = ['', ...Object.keys(object)]\n  if (skipNames.includes(name)) {\n    return\n  }\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    configurable: true,\n    get: () => object._links[position].Hash\n  })\n}\n\nmodule.exports = addNamedLink\n"]},"metadata":{},"sourceType":"script"}
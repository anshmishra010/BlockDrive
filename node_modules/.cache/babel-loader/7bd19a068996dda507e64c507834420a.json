{"ast":null,"code":"'use strict';\n\nvar cleanCID = require('../utils/clean-cid');\n\nvar TarStreamToObjects = require('../utils/tar-stream-to-objects');\n\nvar v = require('is-ipfs');\n\nvar Stream = require('readable-stream');\n\nvar pump = require('pump');\n\nmodule.exports = function (send) {\n  return function (path, opts) {\n    opts = opts || {};\n    var pt = new Stream.PassThrough({\n      objectMode: true\n    });\n\n    try {\n      path = cleanCID(path);\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return pt.destroy(err);\n      }\n    }\n\n    var request = {\n      path: 'get',\n      args: path,\n      qs: opts\n    }; // Convert the response stream to TarStream objects\n\n    send.andTransform(request, TarStreamToObjects, function (err, stream) {\n      if (err) {\n        return pt.destroy(err);\n      }\n\n      pump(stream, pt);\n    });\n    return pt;\n  };\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/files-regular/get-readable-stream.js"],"names":["cleanCID","require","TarStreamToObjects","v","Stream","pump","module","exports","send","path","opts","pt","PassThrough","objectMode","err","ipfsPath","destroy","request","args","qs","andTransform","stream"],"mappings":"AAAA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,gCAAD,CAAlC;;AACA,IAAME,CAAC,GAAGF,OAAO,CAAC,SAAD,CAAjB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAEAK,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAO,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,QAAMC,EAAE,GAAG,IAAIP,MAAM,CAACQ,WAAX,CAAuB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAvB,CAAX;;AAEA,QAAI;AACFJ,MAAAA,IAAI,GAAGT,QAAQ,CAACS,IAAD,CAAf;AACD,KAFD,CAEE,OAAOK,GAAP,EAAY;AACZ,UAAI,CAACX,CAAC,CAACY,QAAF,CAAWN,IAAX,CAAL,EAAuB;AACrB,eAAOE,EAAE,CAACK,OAAH,CAAWF,GAAX,CAAP;AACD;AACF;;AAED,QAAMG,OAAO,GAAG;AAAER,MAAAA,IAAI,EAAE,KAAR;AAAeS,MAAAA,IAAI,EAAET,IAArB;AAA2BU,MAAAA,EAAE,EAAET;AAA/B,KAAhB,CAbqB,CAerB;;AACAF,IAAAA,IAAI,CAACY,YAAL,CAAkBH,OAAlB,EAA2Bf,kBAA3B,EAA+C,UAACY,GAAD,EAAMO,MAAN,EAAiB;AAC9D,UAAIP,GAAJ,EAAS;AAAE,eAAOH,EAAE,CAACK,OAAH,CAAWF,GAAX,CAAP;AAAwB;;AAEnCT,MAAAA,IAAI,CAACgB,MAAD,EAASV,EAAT,CAAJ;AACD,KAJD;AAMA,WAAOA,EAAP;AACD,GAvBD;AAwBD,CAzBD","sourcesContent":["'use strict'\n\nconst cleanCID = require('../utils/clean-cid')\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects')\nconst v = require('is-ipfs')\nconst Stream = require('readable-stream')\nconst pump = require('pump')\n\nmodule.exports = (send) => {\n  return (path, opts) => {\n    opts = opts || {}\n\n    const pt = new Stream.PassThrough({ objectMode: true })\n\n    try {\n      path = cleanCID(path)\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return pt.destroy(err)\n      }\n    }\n\n    const request = { path: 'get', args: path, qs: opts }\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) { return pt.destroy(err) }\n\n      pump(stream, pt)\n    })\n\n    return pt\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/** PROMISIFY CALLBACK-STYLE FUNCTIONS TO ES6 PROMISES\r\n*\r\n* EXAMPLE:\r\n* const fn = promisify( (callback) => callback(null, \"Hello world!\") );\r\n* fn((err, str) => console.log(str));\r\n* fn().then((str) => console.log(str));\r\n* //Both functions, will log 'Hello world!'\r\n*\r\n* Note: The function you pass, may have any arguments you want, but the latest\r\n* have to be the callback, which you will call with: next(err, value)\r\n*\r\n* @param method: Function/Array/Map = The function(s) to promisify\r\n* @param options: Map =\r\n*  \"context\" (default is function): The context which to apply the called function\r\n*  \"replace\" (default is falsy): When passed an array/map, if to replace the original object\r\n*\r\n* @return: A promise if passed a function, otherwise the object with the promises\r\n*\r\n* @license: MIT\r\n* @version: 1.0.3\r\n* @author: Manuel Di Iorio\r\n**/\nvar createCallback = function createCallback(method, context) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var lastIndex = args.length - 1;\n    var lastArg = args && args.length > 0 ? args[lastIndex] : null;\n    var cb = typeof lastArg === 'function' ? lastArg : null;\n\n    if (cb) {\n      return method.apply(context, args);\n    }\n\n    return new Promise(function (resolve, reject) {\n      args.push(function (err, val) {\n        if (err) return reject(err);\n        resolve(val);\n      });\n      method.apply(context, args);\n    });\n  };\n};\n\nif (typeof module === \"undefined\") module = {}; // Browserify this module\n\nmodule.exports = function (methods, options) {\n  options = options || {};\n  var type = Object.prototype.toString.call(methods);\n\n  if (type === \"[object Object]\" || type === \"[object Array]\") {\n    var obj = options.replace ? methods : {};\n\n    for (var key in methods) {\n      if (methods.hasOwnProperty(key)) obj[key] = createCallback(methods[key]);\n    }\n\n    return obj;\n  }\n\n  return createCallback(methods, options.context || methods);\n}; // Browserify this module\n\n\nif (typeof exports === \"undefined\") {\n  this[\"promisify\"] = module.exports;\n}","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/promisify-es6/index.js"],"names":["createCallback","method","context","args","Array","prototype","slice","call","arguments","lastIndex","length","lastArg","cb","apply","Promise","resolve","reject","push","err","val","module","exports","methods","options","type","Object","toString","obj","replace","key","hasOwnProperty"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC5C,SAAO,YAAY;AACf,QAAIC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,QAAIC,SAAS,GAAGN,IAAI,CAACO,MAAL,GAAc,CAA9B;AACA,QAAIC,OAAO,GAAGR,IAAI,IAAIA,IAAI,CAACO,MAAL,GAAc,CAAtB,GAA0BP,IAAI,CAACM,SAAD,CAA9B,GAA4C,IAA1D;AACA,QAAIG,EAAE,GAAG,OAAOD,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0C,IAAnD;;AAEA,QAAIC,EAAJ,EAAQ;AACJ,aAAOX,MAAM,CAACY,KAAP,CAAaX,OAAb,EAAsBC,IAAtB,CAAP;AACH;;AAED,WAAO,IAAIW,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1Cb,MAAAA,IAAI,CAACc,IAAL,CAAU,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC1B,YAAID,GAAJ,EAAS,OAAOF,MAAM,CAACE,GAAD,CAAb;AACTH,QAAAA,OAAO,CAACI,GAAD,CAAP;AACH,OAHD;AAKAlB,MAAAA,MAAM,CAACY,KAAP,CAAaX,OAAb,EAAsBC,IAAtB;AACH,KAPM,CAAP;AAQH,GAlBD;AAmBH,CApBD;;AAsBA,IAAI,OAAOiB,MAAP,KAAkB,WAAtB,EAAmCA,MAAM,GAAG,EAAT,C,CAAa;;AAEhDA,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACzCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,IAAI,GAAGC,MAAM,CAACpB,SAAP,CAAiBqB,QAAjB,CAA0BnB,IAA1B,CAA+Be,OAA/B,CAAX;;AAEA,MAAIE,IAAI,KAAK,iBAAT,IAA8BA,IAAI,KAAK,gBAA3C,EAA6D;AACzD,QAAIG,GAAG,GAAGJ,OAAO,CAACK,OAAR,GAAkBN,OAAlB,GAA4B,EAAtC;;AAEA,SAAK,IAAIO,GAAT,IAAgBP,OAAhB,EAAyB;AACrB,UAAIA,OAAO,CAACQ,cAAR,CAAuBD,GAAvB,CAAJ,EAAiCF,GAAG,CAACE,GAAD,CAAH,GAAW7B,cAAc,CAACsB,OAAO,CAACO,GAAD,CAAR,CAAzB;AACpC;;AAAA,WAAOF,GAAP;AACJ;;AAED,SAAO3B,cAAc,CAACsB,OAAD,EAAUC,OAAO,CAACrB,OAAR,IAAmBoB,OAA7B,CAArB;AACH,CAbD,C,CAeA;;;AACA,IAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoC;AAChC,OAAK,WAAL,IAAoBD,MAAM,CAACC,OAA3B;AACH","sourcesContent":["/** PROMISIFY CALLBACK-STYLE FUNCTIONS TO ES6 PROMISES\r\n*\r\n* EXAMPLE:\r\n* const fn = promisify( (callback) => callback(null, \"Hello world!\") );\r\n* fn((err, str) => console.log(str));\r\n* fn().then((str) => console.log(str));\r\n* //Both functions, will log 'Hello world!'\r\n*\r\n* Note: The function you pass, may have any arguments you want, but the latest\r\n* have to be the callback, which you will call with: next(err, value)\r\n*\r\n* @param method: Function/Array/Map = The function(s) to promisify\r\n* @param options: Map =\r\n*  \"context\" (default is function): The context which to apply the called function\r\n*  \"replace\" (default is falsy): When passed an array/map, if to replace the original object\r\n*\r\n* @return: A promise if passed a function, otherwise the object with the promises\r\n*\r\n* @license: MIT\r\n* @version: 1.0.3\r\n* @author: Manuel Di Iorio\r\n**/\r\n\r\nvar createCallback = function (method, context) {\r\n    return function () {\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var lastIndex = args.length - 1;\r\n        var lastArg = args && args.length > 0 ? args[lastIndex] : null;\r\n        var cb = typeof lastArg === 'function' ? lastArg : null;\r\n\r\n        if (cb) {\r\n            return method.apply(context, args);\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            args.push(function (err, val) {\r\n                if (err) return reject(err);\r\n                resolve(val);\r\n            });\r\n\r\n            method.apply(context, args);\r\n        });\r\n    };\r\n};\r\n\r\nif (typeof module === \"undefined\") module = {}; // Browserify this module\r\n\r\nmodule.exports = function (methods, options) {\r\n    options = options || {};\r\n    var type = Object.prototype.toString.call(methods);\r\n\r\n    if (type === \"[object Object]\" || type === \"[object Array]\") {\r\n        var obj = options.replace ? methods : {};\r\n\r\n        for (var key in methods) {\r\n            if (methods.hasOwnProperty(key)) obj[key] = createCallback(methods[key]);\r\n        }return obj;\r\n    }\r\n\r\n    return createCallback(methods, options.context || methods);\r\n};\r\n\r\n// Browserify this module\r\nif (typeof exports === \"undefined\") {\r\n    this[\"promisify\"] = module.exports;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}
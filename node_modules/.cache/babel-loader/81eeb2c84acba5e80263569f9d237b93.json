{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\anshm\\\\blockdrive\\\\src\\\\components\\\\App.js\";\n//import DStorage from '../abis/DStorage.json'\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport './App.css'; //Declare IPFS\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, dstorage, filesCount, i, file;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // Network ID\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = DStorage.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                // Assign contract\n                dstorage = new web3.eth.Contract(DStorage.abi, networkData.address);\n                this.setState({\n                  dstorage: dstorage\n                }); // Get files amount\n\n                _context3.next = 14;\n                return dstorage.methods.fileCount().call();\n\n              case 14:\n                filesCount = _context3.sent;\n                this.setState({\n                  filesCount: filesCount\n                }); // Load files&sort by the newest\n\n                i = filesCount;\n\n              case 17:\n                if (!(i >= 1)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return dstorage.methods.files(i).call();\n\n              case 20:\n                file = _context3.sent;\n                this.setState({\n                  files: [].concat(_toConsumableArray(this.state.files), [file])\n                });\n\n              case 22:\n                i--;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                _context3.next = 28;\n                break;\n\n              case 27:\n                window.alert('DStorage contract not deployed to detected network.');\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() // Get file from user\n\n  }]);\n\n  //Set states\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result),\n          type: file.type,\n          name: file.name\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.uploadFile = function (description) {\n      console.log(\"Submitting file to IPFS...\"); // Add file to the IPFS\n\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('IPFS result', result.size);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.setState({\n          loading: true\n        }); // Assign value for the file without extension\n\n\n        if (_this.state.type === '') {\n          _this.setState({\n            type: 'none'\n          });\n        }\n\n        _this.state.dstorage.methods.uploadFile(result[0].hash, result[0].size, _this.state.type, _this.state.name, description).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false,\n            type: null,\n            name: null\n          });\n\n          window.location.reload();\n        }).on('error', function (e) {\n          window.alert('Error');\n\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      dstorage: null,\n      files: [],\n      loading: false,\n      type: null,\n      name: null\n    };\n    _this.uploadFile = _this.uploadFile.bind(_assertThisInitialized(_this));\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 59\n        }\n      }, \"Loading...\")) : /*#__PURE__*/React.createElement(Main, {\n        files: this.state.files,\n        captureFile: this.captureFile,\n        uploadFile: this.uploadFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/src/components/App.js"],"names":["React","Component","Navbar","Main","Web3","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","DStorage","networks","dstorage","Contract","abi","address","methods","fileCount","call","filesCount","i","files","file","state","props","captureFile","event","preventDefault","target","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","type","name","console","log","uploadFile","description","add","error","size","loading","hash","send","from","on","location","reload","e","bind"],"mappings":"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","sourcesContent":["//import DStorage from '../abis/DStorage.json'\r\nimport React, { Component } from 'react';\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\n//Declare IPFS\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = DStorage.networks[networkId]\r\n    if(networkData) {\r\n      // Assign contract\r\n      const dstorage = new web3.eth.Contract(DStorage.abi, networkData.address)\r\n      this.setState({ dstorage })\r\n      // Get files amount\r\n      const filesCount = await dstorage.methods.fileCount().call()\r\n      this.setState({ filesCount })\r\n      // Load files&sort by the newest\r\n      for (var i = filesCount; i >= 1; i--) {\r\n        const file = await dstorage.methods.files(i).call()\r\n        this.setState({\r\n          files: [...this.state.files, file]\r\n        })\r\n      }\r\n    } else {\r\n      window.alert('DStorage contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n\r\n  // Get file from user\r\n  captureFile = event => {\r\n    event.preventDefault()\r\n\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        buffer: Buffer(reader.result),\r\n        type: file.type,\r\n        name: file.name\r\n      })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n\r\n  //Upload File\r\n  uploadFile = description => {\r\n    console.log(\"Submitting file to IPFS...\")\r\n\r\n    // Add file to the IPFS\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('IPFS result', result.size)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n\r\n      this.setState({ loading: true })\r\n      // Assign value for the file without extension\r\n      if(this.state.type === ''){\r\n        this.setState({type: 'none'})\r\n      }\r\n      this.state.dstorage.methods.uploadFile(result[0].hash, result[0].size, this.state.type, this.state.name, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({\r\n         loading: false,\r\n         type: null,\r\n         name: null\r\n       })\r\n       window.location.reload()\r\n      }).on('error', (e) =>{\r\n        window.alert('Error')\r\n        this.setState({loading: false})\r\n      })\r\n    })\r\n  }\r\n\r\n  //Set states\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      dstorage: null,\r\n      files: [],\r\n      loading: false,\r\n      type: null,\r\n      name: null\r\n    }\r\n    this.uploadFile = this.uploadFile.bind(this)\r\n    this.captureFile = this.captureFile.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n              files={this.state.files}\r\n              captureFile={this.captureFile}\r\n              uploadFile={this.uploadFile}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
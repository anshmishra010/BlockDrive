{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nmodule.exports = function (send) {\n  return promisify(function (path, opts, callback) {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    send({\n      path: 'files/rm',\n      args: path,\n      qs: opts\n    }, function (error) {\n      return callback(error);\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/files-mfs/rm.js"],"names":["promisify","require","module","exports","send","path","opts","callback","args","qs","error"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAOJ,SAAS,CAAC,UAACK,IAAD,EAAOC,IAAP,EAAaC,QAAb,EAA0B;AACzC,QAAI,OAAOD,IAAP,KAAgB,UAAhB,IACF,CAACC,QADH,EACa;AACXA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD,KALwC,CAOzC;AACA;;;AACA,QAAI,OAAOA,IAAP,KAAgB,UAAhB,IACF,OAAOC,QAAP,KAAoB,UADtB,EACkC;AAChCA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAEDF,IAAAA,IAAI,CAAC;AACHC,MAAAA,IAAI,EAAE,UADH;AAEHG,MAAAA,IAAI,EAAEH,IAFH;AAGHI,MAAAA,EAAE,EAAEH;AAHD,KAAD,EAID,UAACI,KAAD;AAAA,aAAWH,QAAQ,CAACG,KAAD,CAAnB;AAAA,KAJC,CAAJ;AAKD,GApBe,CAAhB;AAqBD,CAtBD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\n\nmodule.exports = (send) => {\n  return promisify((path, opts, callback) => {\n    if (typeof opts === 'function' &&\n      !callback) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' &&\n      typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    send({\n      path: 'files/rm',\n      args: path,\n      qs: opts\n    }, (error) => callback(error))\n  })\n}\n"]},"metadata":{},"sourceType":"script"}
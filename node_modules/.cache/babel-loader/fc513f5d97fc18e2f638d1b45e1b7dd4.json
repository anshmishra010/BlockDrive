{"ast":null,"code":"module.exports = function () {\n  var read, reader, cb, abort, stream;\n\n  function delayed(_read) {\n    //if we already have the stream, go!\n    if (stream) return stream(_read);\n    read = _read;\n    return function (_abort, _cb) {\n      if (reader) reader(_abort, _cb);else abort = _abort, cb = _cb;\n    };\n  }\n\n  delayed.resolve = function (_stream) {\n    if (stream) throw new Error('already resolved');\n    stream = _stream;\n    if (!stream) throw new Error('resolve *must* be passed a transform stream');\n\n    if (read) {\n      reader = stream(read);\n      if (cb) reader(abort, cb);\n    }\n  };\n\n  return delayed;\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/pull-defer/through.js"],"names":["module","exports","read","reader","cb","abort","stream","delayed","_read","_abort","_cb","resolve","_stream","Error"],"mappings":"AACAA,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC3B,MAAIC,IAAJ,EAAUC,MAAV,EAAkBC,EAAlB,EAAsBC,KAAtB,EAA6BC,MAA7B;;AAEA,WAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,QAAGF,MAAH,EAAW,OAAOA,MAAM,CAACE,KAAD,CAAb;AAEXN,IAAAA,IAAI,GAAGM,KAAP;AACA,WAAO,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;AAC5B,UAAGP,MAAH,EAAWA,MAAM,CAACM,MAAD,EAASC,GAAT,CAAN,CAAX,KACKL,KAAK,GAAGI,MAAR,EAAgBL,EAAE,GAAGM,GAArB;AAEN,KAJD;AAKD;;AAEDH,EAAAA,OAAO,CAACI,OAAR,GAAkB,UAAUC,OAAV,EAAmB;AACnC,QAAGN,MAAH,EAAW,MAAM,IAAIO,KAAJ,CAAU,kBAAV,CAAN;AACXP,IAAAA,MAAM,GAAGM,OAAT;AACA,QAAG,CAACN,MAAJ,EAAY,MAAM,IAAIO,KAAJ,CAAU,6CAAV,CAAN;;AACZ,QAAGX,IAAH,EAAS;AACPC,MAAAA,MAAM,GAAGG,MAAM,CAACJ,IAAD,CAAf;AACA,UAAGE,EAAH,EAAOD,MAAM,CAACE,KAAD,EAAQD,EAAR,CAAN;AACR;AACF,GARD;;AAUA,SAAOG,OAAP;AACD,CA1BD","sourcesContent":["\nmodule.exports = function () {\n  var read, reader, cb, abort, stream\n\n  function delayed (_read) {\n    //if we already have the stream, go!\n    if(stream) return stream(_read)\n\n    read = _read\n    return function (_abort, _cb) {\n      if(reader) reader(_abort, _cb)\n      else abort = _abort, cb = _cb\n\n    }\n  }\n\n  delayed.resolve = function (_stream) {\n    if(stream) throw new Error('already resolved')\n    stream = _stream\n    if(!stream) throw new Error('resolve *must* be passed a transform stream')\n    if(read) {\n      reader = stream(read)\n      if(cb) reader(abort, cb)\n    }\n  }\n\n  return delayed\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar pull = require('pull-stream');\n\nvar toPull = require('stream-to-pull-stream');\n\nvar deferred = require('pull-defer');\n\nvar moduleConfig = require('../utils/module-config');\n\nmodule.exports = function (send) {\n  send = moduleConfig(send);\n  return function (opts) {\n    opts = opts || {};\n    var p = deferred.source();\n    send({\n      path: 'refs/local',\n      qs: opts\n    }, function (err, stream) {\n      if (err) {\n        return p.resolve(pull.error(err));\n      }\n\n      p.resolve(pull(toPull.source(stream), pull.map(function (r) {\n        return {\n          ref: r.Ref,\n          err: r.Err\n        };\n      })));\n    });\n    return p;\n  };\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/files-regular/refs-local-pull-stream.js"],"names":["pull","require","toPull","deferred","moduleConfig","module","exports","send","opts","p","source","path","qs","err","stream","resolve","error","map","r","ref","Ref","Err"],"mappings":"AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,wBAAD,CAA5B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzBA,EAAAA,IAAI,GAAGH,YAAY,CAACG,IAAD,CAAnB;AAEA,SAAO,UAACC,IAAD,EAAU;AACfA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,QAAMC,CAAC,GAAGN,QAAQ,CAACO,MAAT,EAAV;AAEAH,IAAAA,IAAI,CAAC;AAAEI,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,EAAE,EAAEJ;AAA1B,KAAD,EAAmC,UAACK,GAAD,EAAMC,MAAN,EAAiB;AACtD,UAAID,GAAJ,EAAS;AAAE,eAAOJ,CAAC,CAACM,OAAF,CAAUf,IAAI,CAACgB,KAAL,CAAWH,GAAX,CAAV,CAAP;AAAmC;;AAE9CJ,MAAAA,CAAC,CAACM,OAAF,CAAUf,IAAI,CACZE,MAAM,CAACQ,MAAP,CAAcI,MAAd,CADY,EAEZd,IAAI,CAACiB,GAAL,CAAS,UAAAC,CAAC;AAAA,eAAK;AAAEC,UAAAA,GAAG,EAAED,CAAC,CAACE,GAAT;AAAcP,UAAAA,GAAG,EAAEK,CAAC,CAACG;AAArB,SAAL;AAAA,OAAV,CAFY,CAAd;AAID,KAPG,CAAJ;AASA,WAAOZ,CAAP;AACD,GAfD;AAgBD,CAnBD","sourcesContent":["'use strict'\n\nconst pull = require('pull-stream')\nconst toPull = require('stream-to-pull-stream')\nconst deferred = require('pull-defer')\nconst moduleConfig = require('../utils/module-config')\n\nmodule.exports = (send) => {\n  send = moduleConfig(send)\n\n  return (opts) => {\n    opts = opts || {}\n\n    const p = deferred.source()\n\n    send({ path: 'refs/local', qs: opts }, (err, stream) => {\n      if (err) { return p.resolve(pull.error(err)) }\n\n      p.resolve(pull(\n        toPull.source(stream),\n        pull.map(r => ({ ref: r.Ref, err: r.Err }))\n      ))\n    })\n\n    return p\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
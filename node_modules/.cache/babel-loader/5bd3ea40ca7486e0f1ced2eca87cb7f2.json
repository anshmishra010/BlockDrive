{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar Big = require('bignumber.js');\n\nvar transform = function transform(res, callback) {\n  callback(null, {\n    numObjects: new Big(res.NumObjects),\n    repoSize: new Big(res.RepoSize),\n    repoPath: res.RepoPath,\n    version: res.Version,\n    storageMax: new Big(res.StorageMax)\n  });\n};\n\nmodule.exports = function (send) {\n  return promisify(function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    send.andTransform({\n      path: 'stats/repo',\n      qs: opts\n    }, transform, callback);\n  });\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/stats/repo.js"],"names":["promisify","require","Big","transform","res","callback","numObjects","NumObjects","repoSize","RepoSize","repoPath","RepoPath","version","Version","storageMax","StorageMax","module","exports","send","opts","andTransform","path","qs"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAUC,GAAV,EAAeC,QAAf,EAAyB;AACzCA,EAAAA,QAAQ,CAAC,IAAD,EAAO;AACbC,IAAAA,UAAU,EAAE,IAAIJ,GAAJ,CAAQE,GAAG,CAACG,UAAZ,CADC;AAEbC,IAAAA,QAAQ,EAAE,IAAIN,GAAJ,CAAQE,GAAG,CAACK,QAAZ,CAFG;AAGbC,IAAAA,QAAQ,EAAEN,GAAG,CAACO,QAHD;AAIbC,IAAAA,OAAO,EAAER,GAAG,CAACS,OAJA;AAKbC,IAAAA,UAAU,EAAE,IAAIZ,GAAJ,CAAQE,GAAG,CAACW,UAAZ;AALC,GAAP,CAAR;AAOD,CARD;;AAUAC,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAOlB,SAAS,CAAC,UAACmB,IAAD,EAAOd,QAAP,EAAoB;AACnC,QAAI,OAAQc,IAAR,KAAkB,UAAtB,EAAkC;AAChCd,MAAAA,QAAQ,GAAGc,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAEDD,IAAAA,IAAI,CAACE,YAAL,CAAkB;AAChBC,MAAAA,IAAI,EAAE,YADU;AAEhBC,MAAAA,EAAE,EAAEH;AAFY,KAAlB,EAGGhB,SAHH,EAGcE,QAHd;AAID,GAVe,CAAhB;AAWD,CAZD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst Big = require('bignumber.js')\n\nconst transform = function (res, callback) {\n  callback(null, {\n    numObjects: new Big(res.NumObjects),\n    repoSize: new Big(res.RepoSize),\n    repoPath: res.RepoPath,\n    version: res.Version,\n    storageMax: new Big(res.StorageMax)\n  })\n}\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    send.andTransform({\n      path: 'stats/repo',\n      qs: opts\n    }, transform, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}
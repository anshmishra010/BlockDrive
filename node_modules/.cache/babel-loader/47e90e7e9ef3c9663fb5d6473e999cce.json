{"ast":null,"code":"'use strict';\n\nvar dagNodeUtil = require('./util');\n\nvar cloneLinks = dagNodeUtil.cloneLinks;\nvar cloneData = dagNodeUtil.cloneData;\n\nvar create = require('./create');\n\nvar CID = require('cids');\n\nvar rmLink = function rmLink(dagNode, nameOrCid) {\n  var data = cloneData(dagNode);\n  var links = cloneLinks(dagNode);\n\n  if (typeof nameOrCid === 'string') {\n    links = links.filter(function (link) {\n      return link.Name !== nameOrCid;\n    });\n  } else if (Buffer.isBuffer(nameOrCid) || CID.isCID(nameOrCid)) {\n    links = links.filter(function (link) {\n      return !link.Hash.equals(nameOrCid);\n    });\n  } else {\n    throw new Error('second arg needs to be a name or CID');\n  }\n\n  return create(data, links);\n};\n\nmodule.exports = rmLink;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipld-dag-pb/src/dag-node/rmLink.js"],"names":["dagNodeUtil","require","cloneLinks","cloneData","create","CID","rmLink","dagNode","nameOrCid","data","links","filter","link","Name","Buffer","isBuffer","isCID","Hash","equals","Error","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,QAAD,CAA3B;;AACA,IAAMC,UAAU,GAAGF,WAAW,CAACE,UAA/B;AACA,IAAMC,SAAS,GAAGH,WAAW,CAACG,SAA9B;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMI,GAAG,GAAGJ,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAUC,SAAV,EAAwB;AACrC,MAAMC,IAAI,GAAGN,SAAS,CAACI,OAAD,CAAtB;AACA,MAAIG,KAAK,GAAGR,UAAU,CAACK,OAAD,CAAtB;;AAEA,MAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;AACjCE,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,KAAcL,SAAxB;AAAA,KAAb,CAAR;AACD,GAFD,MAEO,IAAIM,MAAM,CAACC,QAAP,CAAgBP,SAAhB,KAA8BH,GAAG,CAACW,KAAJ,CAAUR,SAAV,CAAlC,EAAwD;AAC7DE,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD;AAAA,aAAU,CAACA,IAAI,CAACK,IAAL,CAAUC,MAAV,CAAiBV,SAAjB,CAAX;AAAA,KAAb,CAAR;AACD,GAFM,MAEA;AACL,UAAM,IAAIW,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,SAAOf,MAAM,CAACK,IAAD,EAAOC,KAAP,CAAb;AACD,CAbD;;AAeAU,MAAM,CAACC,OAAP,GAAiBf,MAAjB","sourcesContent":["'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst create = require('./create')\nconst CID = require('cids')\n\nconst rmLink = (dagNode, nameOrCid) => {\n  const data = cloneData(dagNode)\n  let links = cloneLinks(dagNode)\n\n  if (typeof nameOrCid === 'string') {\n    links = links.filter((link) => link.Name !== nameOrCid)\n  } else if (Buffer.isBuffer(nameOrCid) || CID.isCID(nameOrCid)) {\n    links = links.filter((link) => !link.Hash.equals(nameOrCid))\n  } else {\n    throw new Error('second arg needs to be a name or CID')\n  }\n\n  return create(data, links)\n}\n\nmodule.exports = rmLink\n"]},"metadata":{},"sourceType":"script"}
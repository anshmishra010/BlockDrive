{"ast":null,"code":"'use strict';\n\nvar createHmac = require('create-hmac');\n\nvar hashInfo = require('./lib/hash-info.json');\n\nvar ebuf = new Buffer(0);\nvar b0x00 = new Buffer([0x00]);\nvar b0x01 = new Buffer([0x01]);\n\nfunction HmacDRBG(algo, entropy, nonce, pers) {\n  var info = hashInfo[algo];\n  if (info === undefined) throw new Error('hash ' + algo + ' is not supported');\n  this._algo = algo;\n  this._securityStrength = info.securityStrength / 8;\n  this._outlen = info.outlen / 8;\n  this._reseedInterval = 0x1000000000000; // 2**48\n\n  this._init(entropy, nonce, pers);\n}\n\nHmacDRBG.prototype._update = function (seed) {\n  var kmac = createHmac(this._algo, this._K).update(this._V).update(b0x00);\n  if (seed) kmac.update(seed);\n  this._K = kmac.digest();\n  this._V = createHmac(this._algo, this._K).update(this._V).digest();\n  if (!seed) return;\n  this._K = createHmac(this._algo, this._K).update(this._V).update(b0x01).update(seed).digest();\n  this._V = createHmac(this._algo, this._K).update(this._V).digest();\n};\n\nHmacDRBG.prototype._init = function (entropy, nonce, pers) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy');\n  this._K = new Buffer(this._outlen);\n  this._V = new Buffer(this._outlen);\n\n  for (var i = 0; i < this._K.length; ++i) {\n    this._K[i] = 0x00;\n    this._V[i] = 0x01;\n  }\n\n  this._update(Buffer.concat([entropy, nonce, pers || ebuf]));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.reseed = function (entropy, add) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy');\n\n  this._update(Buffer.concat([entropy, add || ebuf]));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function (len, add) {\n  if (this._reseed > this._reseedInterval) throw new Error('Reseed is required');\n  if (add && add.length === 0) add = undefined;\n  if (add) this._update(add);\n  var temp = new Buffer(0);\n\n  while (temp.length < len) {\n    this._V = createHmac(this._algo, this._K).update(this._V).digest();\n    temp = Buffer.concat([temp, this._V]);\n  }\n\n  this._update(add);\n\n  this._reseed += 1;\n  return temp.slice(0, len);\n};\n\nmodule.exports = HmacDRBG;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/drbg.js/hmac.js"],"names":["createHmac","require","hashInfo","ebuf","Buffer","b0x00","b0x01","HmacDRBG","algo","entropy","nonce","pers","info","undefined","Error","_algo","_securityStrength","securityStrength","_outlen","outlen","_reseedInterval","_init","prototype","_update","seed","kmac","_K","update","_V","digest","length","i","concat","_reseed","reseed","add","generate","len","temp","slice","module","exports"],"mappings":"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","sourcesContent":["'use strict'\nvar createHmac = require('create-hmac')\nvar hashInfo = require('./lib/hash-info.json')\n\nvar ebuf = new Buffer(0)\nvar b0x00 = new Buffer([ 0x00 ])\nvar b0x01 = new Buffer([ 0x01 ])\n\nfunction HmacDRBG (algo, entropy, nonce, pers) {\n  var info = hashInfo[algo]\n  if (info === undefined) throw new Error('hash ' + algo + ' is not supported')\n\n  this._algo = algo\n  this._securityStrength = info.securityStrength / 8\n  this._outlen = info.outlen / 8\n  this._reseedInterval = 0x1000000000000 // 2**48\n\n  this._init(entropy, nonce, pers)\n}\n\nHmacDRBG.prototype._update = function (seed) {\n  var kmac = createHmac(this._algo, this._K).update(this._V).update(b0x00)\n  if (seed) kmac.update(seed)\n\n  this._K = kmac.digest()\n  this._V = createHmac(this._algo, this._K).update(this._V).digest()\n  if (!seed) return\n\n  this._K = createHmac(this._algo, this._K).update(this._V).update(b0x01).update(seed).digest()\n  this._V = createHmac(this._algo, this._K).update(this._V).digest()\n}\n\nHmacDRBG.prototype._init = function (entropy, nonce, pers) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy')\n\n  this._K = new Buffer(this._outlen)\n  this._V = new Buffer(this._outlen)\n  for (var i = 0; i < this._K.length; ++i) {\n    this._K[i] = 0x00\n    this._V[i] = 0x01\n  }\n\n  this._update(Buffer.concat([ entropy, nonce, pers || ebuf ]))\n  this._reseed = 1\n}\n\nHmacDRBG.prototype.reseed = function (entropy, add) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy')\n\n  this._update(Buffer.concat([ entropy, add || ebuf ]))\n  this._reseed = 1\n}\n\nHmacDRBG.prototype.generate = function (len, add) {\n  if (this._reseed > this._reseedInterval) throw new Error('Reseed is required')\n\n  if (add && add.length === 0) add = undefined\n  if (add) this._update(add)\n\n  var temp = new Buffer(0)\n  while (temp.length < len) {\n    this._V = createHmac(this._algo, this._K).update(this._V).digest()\n    temp = Buffer.concat([ temp, this._V ])\n  }\n\n  this._update(add)\n  this._reseed += 1\n  return temp.slice(0, len)\n}\n\nmodule.exports = HmacDRBG\n"]},"metadata":{},"sourceType":"script"}
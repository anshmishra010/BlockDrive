{"ast":null,"code":"'use strict';\n\nvar bs58 = require('bs58');\n\nmodule.exports = {\n  deserialize: function deserialize(data, enc) {\n    enc = enc ? enc.toLowerCase() : 'json';\n\n    if (enc === 'json') {\n      return deserializeFromJson(data);\n    } else if (enc === 'base64') {\n      return deserializeFromBase64(data);\n    }\n\n    throw new Error(\"Unsupported encoding: '\".concat(enc, \"'\"));\n  }\n};\n\nfunction deserializeFromJson(data) {\n  var json = JSON.parse(data);\n  return deserializeFromBase64(json);\n}\n\nfunction deserializeFromBase64(obj) {\n  if (!isPubsubMessage(obj)) {\n    throw new Error(\"Not a pubsub message\");\n  }\n\n  return {\n    from: bs58.encode(Buffer.from(obj.from, 'base64')).toString(),\n    seqno: Buffer.from(obj.seqno, 'base64'),\n    data: Buffer.from(obj.data, 'base64'),\n    topicIDs: obj.topicIDs || obj.topicCIDs\n  };\n}\n\nfunction isPubsubMessage(obj) {\n  return obj && obj.from && obj.seqno && obj.data && (obj.topicIDs || obj.topicCIDs);\n}","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/utils/pubsub-message-utils.js"],"names":["bs58","require","module","exports","deserialize","data","enc","toLowerCase","deserializeFromJson","deserializeFromBase64","Error","json","JSON","parse","obj","isPubsubMessage","from","encode","Buffer","toString","seqno","topicIDs","topicCIDs"],"mappings":"AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WADe,uBACFC,IADE,EACIC,GADJ,EACS;AACtBA,IAAAA,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAH,GAAuB,MAAhC;;AAEA,QAAID,GAAG,KAAK,MAAZ,EAAoB;AAClB,aAAOE,mBAAmB,CAACH,IAAD,CAA1B;AACD,KAFD,MAEO,IAAIC,GAAG,KAAK,QAAZ,EAAsB;AAC3B,aAAOG,qBAAqB,CAACJ,IAAD,CAA5B;AACD;;AAED,UAAM,IAAIK,KAAJ,kCAAoCJ,GAApC,OAAN;AACD;AAXc,CAAjB;;AAcA,SAASE,mBAAT,CAA8BH,IAA9B,EAAoC;AAClC,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAb;AACA,SAAOI,qBAAqB,CAACE,IAAD,CAA5B;AACD;;AAED,SAASF,qBAAT,CAAgCK,GAAhC,EAAqC;AACnC,MAAI,CAACC,eAAe,CAACD,GAAD,CAApB,EAA2B;AACzB,UAAM,IAAIJ,KAAJ,wBAAN;AACD;;AAED,SAAO;AACLM,IAAAA,IAAI,EAAEhB,IAAI,CAACiB,MAAL,CAAYC,MAAM,CAACF,IAAP,CAAYF,GAAG,CAACE,IAAhB,EAAsB,QAAtB,CAAZ,EAA6CG,QAA7C,EADD;AAELC,IAAAA,KAAK,EAAEF,MAAM,CAACF,IAAP,CAAYF,GAAG,CAACM,KAAhB,EAAuB,QAAvB,CAFF;AAGLf,IAAAA,IAAI,EAAEa,MAAM,CAACF,IAAP,CAAYF,GAAG,CAACT,IAAhB,EAAsB,QAAtB,CAHD;AAILgB,IAAAA,QAAQ,EAAEP,GAAG,CAACO,QAAJ,IAAgBP,GAAG,CAACQ;AAJzB,GAAP;AAMD;;AAED,SAASP,eAAT,CAA0BD,GAA1B,EAA+B;AAC7B,SAAOA,GAAG,IAAIA,GAAG,CAACE,IAAX,IAAmBF,GAAG,CAACM,KAAvB,IAAgCN,GAAG,CAACT,IAApC,KAA6CS,GAAG,CAACO,QAAJ,IAAgBP,GAAG,CAACQ,SAAjE,CAAP;AACD","sourcesContent":["'use strict'\n\nconst bs58 = require('bs58')\n\nmodule.exports = {\n  deserialize (data, enc) {\n    enc = enc ? enc.toLowerCase() : 'json'\n\n    if (enc === 'json') {\n      return deserializeFromJson(data)\n    } else if (enc === 'base64') {\n      return deserializeFromBase64(data)\n    }\n\n    throw new Error(`Unsupported encoding: '${enc}'`)\n  }\n}\n\nfunction deserializeFromJson (data) {\n  const json = JSON.parse(data)\n  return deserializeFromBase64(json)\n}\n\nfunction deserializeFromBase64 (obj) {\n  if (!isPubsubMessage(obj)) {\n    throw new Error(`Not a pubsub message`)\n  }\n\n  return {\n    from: bs58.encode(Buffer.from(obj.from, 'base64')).toString(),\n    seqno: Buffer.from(obj.seqno, 'base64'),\n    data: Buffer.from(obj.data, 'base64'),\n    topicIDs: obj.topicIDs || obj.topicCIDs\n  }\n}\n\nfunction isPubsubMessage (obj) {\n  return obj && obj.from && obj.seqno && obj.data && (obj.topicIDs || obj.topicCIDs)\n}\n"]},"metadata":{},"sourceType":"script"}
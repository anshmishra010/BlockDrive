{"ast":null,"code":"'use strict';\n\nvar _require = require('./url'),\n    URLWithLegacySupport = _require.URLWithLegacySupport,\n    format = _require.format;\n\nmodule.exports = function (url) {\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var protocolMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var defaultProtocol = arguments.length > 3 ? arguments[3] : undefined;\n  var protocol = location.protocol ? location.protocol.replace(':', '') : 'http'; // Check protocol map\n\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n  var urlParsed;\n\n  try {\n    urlParsed = new URLWithLegacySupport(url);\n  } catch (err) {\n    urlParsed = {};\n  }\n\n  var base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  });\n  return new URLWithLegacySupport(url, format(base)).toString();\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/iso-url/src/relative.js"],"names":["require","URLWithLegacySupport","format","module","exports","url","location","protocolMap","defaultProtocol","protocol","replace","urlParsed","err","base","Object","assign","host","toString"],"mappings":"AAAA;;eAEyCA,OAAO,CAAC,OAAD,C;IAAxCC,oB,YAAAA,oB;IAAsBC,M,YAAAA,M;;AAE9BC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAA2D;AAAA,MAArDC,QAAqD,uEAA1C,EAA0C;AAAA,MAAtCC,WAAsC,uEAAxB,EAAwB;AAAA,MAApBC,eAAoB;AACxE,MAAIC,QAAQ,GAAGH,QAAQ,CAACG,QAAT,GACXH,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B,CADW,GAEX,MAFJ,CADwE,CAKxE;;AACAD,EAAAA,QAAQ,GAAG,CAACF,WAAW,CAACE,QAAD,CAAX,IAAyBD,eAAzB,IAA4CC,QAA7C,IAAyD,GAApE;AACA,MAAIE,SAAJ;;AAEA,MAAI;AACAA,IAAAA,SAAS,GAAG,IAAIV,oBAAJ,CAAyBI,GAAzB,CAAZ;AACH,GAFD,CAEE,OAAOO,GAAP,EAAY;AACVD,IAAAA,SAAS,GAAG,EAAZ;AACH;;AAED,MAAME,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,QAAlB,EAA4B;AACrCG,IAAAA,QAAQ,EAAEA,QAAQ,IAAIE,SAAS,CAACF,QADK;AAErCO,IAAAA,IAAI,EAAEV,QAAQ,CAACU,IAAT,IAAiBL,SAAS,CAACK;AAFI,GAA5B,CAAb;AAKA,SAAO,IAAIf,oBAAJ,CAAyBI,GAAzB,EAA8BH,MAAM,CAACW,IAAD,CAApC,EAA4CI,QAA5C,EAAP;AACH,CArBD","sourcesContent":["'use strict';\n\nconst { URLWithLegacySupport, format } = require('./url');\n\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n    let protocol = location.protocol ?\n        location.protocol.replace(':', '') :\n        'http';\n\n    // Check protocol map\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n    let urlParsed;\n\n    try {\n        urlParsed = new URLWithLegacySupport(url);\n    } catch (err) {\n        urlParsed = {};\n    }\n\n    const base = Object.assign({}, location, {\n        protocol: protocol || urlParsed.protocol,\n        host: location.host || urlParsed.host\n    });\n\n    return new URLWithLegacySupport(url, format(base)).toString();\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nfunction id(e) {\n  return e;\n}\n\nvar prop = require('../util/prop');\n\nmodule.exports = function asyncMap(map) {\n  if (!map) return id;\n  map = prop(map);\n  var busy = false,\n      abortCb,\n      aborted;\n  return function (read) {\n    return function next(abort, cb) {\n      if (aborted) return cb(aborted);\n\n      if (abort) {\n        aborted = abort;\n        if (!busy) read(abort, function (err) {\n          //incase the source has already ended normally,\n          //we should pass our own error.\n          cb(abort);\n        });else read(abort, function (err) {\n          //if we are still busy, wait for the mapper to complete.\n          if (busy) abortCb = cb;else cb(abort);\n        });\n      } else read(null, function (end, data) {\n        if (end) cb(end);else if (aborted) cb(aborted);else {\n          busy = true;\n          map(data, function (err, data) {\n            busy = false;\n\n            if (aborted) {\n              cb(aborted);\n              abortCb && abortCb(aborted);\n            } else if (err) next(err, cb);else cb(null, data);\n          });\n        }\n      });\n    };\n  };\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/pull-stream/throughs/async-map.js"],"names":["id","e","prop","require","module","exports","asyncMap","map","busy","abortCb","aborted","read","next","abort","cb","err","end","data"],"mappings":"AAAA;;AAEA,SAASA,EAAT,CAAaC,CAAb,EAAgB;AAAE,SAAOA,CAAP;AAAU;;AAC5B,IAAIC,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAmBC,GAAnB,EAAwB;AACvC,MAAG,CAACA,GAAJ,EAAS,OAAOP,EAAP;AACTO,EAAAA,GAAG,GAAGL,IAAI,CAACK,GAAD,CAAV;AACA,MAAIC,IAAI,GAAG,KAAX;AAAA,MAAkBC,OAAlB;AAAA,MAA2BC,OAA3B;AACA,SAAO,UAAUC,IAAV,EAAgB;AACrB,WAAO,SAASC,IAAT,CAAeC,KAAf,EAAsBC,EAAtB,EAA0B;AAC/B,UAAGJ,OAAH,EAAY,OAAOI,EAAE,CAACJ,OAAD,CAAT;;AACZ,UAAGG,KAAH,EAAU;AACRH,QAAAA,OAAO,GAAGG,KAAV;AACA,YAAG,CAACL,IAAJ,EAAUG,IAAI,CAACE,KAAD,EAAQ,UAAUE,GAAV,EAAe;AACnC;AACA;AACAD,UAAAA,EAAE,CAACD,KAAD,CAAF;AACD,SAJa,CAAJ,CAAV,KAKKF,IAAI,CAACE,KAAD,EAAQ,UAAUE,GAAV,EAAe;AAC9B;AACA,cAAGP,IAAH,EAASC,OAAO,GAAGK,EAAV,CAAT,KACKA,EAAE,CAACD,KAAD,CAAF;AACN,SAJQ,CAAJ;AAKN,OAZD,MAcEF,IAAI,CAAC,IAAD,EAAO,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AAC9B,YAAGD,GAAH,EAAQF,EAAE,CAACE,GAAD,CAAF,CAAR,KACK,IAAGN,OAAH,EAAYI,EAAE,CAACJ,OAAD,CAAF,CAAZ,KACA;AACHF,UAAAA,IAAI,GAAG,IAAP;AACAD,UAAAA,GAAG,CAACU,IAAD,EAAO,UAAUF,GAAV,EAAeE,IAAf,EAAqB;AAC7BT,YAAAA,IAAI,GAAG,KAAP;;AACA,gBAAGE,OAAH,EAAY;AACVI,cAAAA,EAAE,CAACJ,OAAD,CAAF;AACAD,cAAAA,OAAO,IAAIA,OAAO,CAACC,OAAD,CAAlB;AACD,aAHD,MAIK,IAAGK,GAAH,EAAQH,IAAI,CAAEG,GAAF,EAAOD,EAAP,CAAJ,CAAR,KACAA,EAAE,CAAC,IAAD,EAAOG,IAAP,CAAF;AACN,WARE,CAAH;AASD;AACF,OAfG,CAAJ;AAgBH,KAhCD;AAiCD,GAlCD;AAmCD,CAvCD","sourcesContent":["'use strict'\n\nfunction id (e) { return e }\nvar prop = require('../util/prop')\n\nmodule.exports = function asyncMap (map) {\n  if(!map) return id\n  map = prop(map)\n  var busy = false, abortCb, aborted\n  return function (read) {\n    return function next (abort, cb) {\n      if(aborted) return cb(aborted)\n      if(abort) {\n        aborted = abort\n        if(!busy) read(abort, function (err) {\n          //incase the source has already ended normally,\n          //we should pass our own error.\n          cb(abort)\n        })\n        else read(abort, function (err) {\n          //if we are still busy, wait for the mapper to complete.\n          if(busy) abortCb = cb\n          else cb(abort)\n        })\n      }\n      else\n        read(null, function (end, data) {\n          if(end) cb(end)\n          else if(aborted) cb(aborted)\n          else {\n            busy = true\n            map(data, function (err, data) {\n              busy = false\n              if(aborted) {\n                cb(aborted)\n                abortCb && abortCb(aborted)\n              }\n              else if(err) next (err, cb)\n              else cb(null, data)\n            })\n          }\n        })\n    }\n  }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}
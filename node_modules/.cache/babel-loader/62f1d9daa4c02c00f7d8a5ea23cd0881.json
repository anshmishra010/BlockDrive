{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar Big = require('bignumber.js');\n\nvar transform = function transform(res, callback) {\n  callback(null, {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: res.Wantlist || [],\n    peers: res.Peers || [],\n    blocksReceived: new Big(res.BlocksReceived),\n    dataReceived: new Big(res.DataReceived),\n    blocksSent: new Big(res.BlocksSent),\n    dataSent: new Big(res.DataSent),\n    dupBlksReceived: new Big(res.DupBlksReceived),\n    dupDataReceived: new Big(res.DupDataReceived)\n  });\n};\n\nmodule.exports = function (send) {\n  return promisify(function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    send.andTransform({\n      path: 'stats/bitswap',\n      qs: opts\n    }, transform, callback);\n  });\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/stats/bitswap.js"],"names":["promisify","require","Big","transform","res","callback","provideBufLen","ProvideBufLen","wantlist","Wantlist","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived","module","exports","send","opts","andTransform","path","qs"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAUC,GAAV,EAAeC,QAAf,EAAyB;AACzCA,EAAAA,QAAQ,CAAC,IAAD,EAAO;AACbC,IAAAA,aAAa,EAAEF,GAAG,CAACG,aADN;AAEbC,IAAAA,QAAQ,EAAEJ,GAAG,CAACK,QAAJ,IAAgB,EAFb;AAGbC,IAAAA,KAAK,EAAEN,GAAG,CAACO,KAAJ,IAAa,EAHP;AAIbC,IAAAA,cAAc,EAAE,IAAIV,GAAJ,CAAQE,GAAG,CAACS,cAAZ,CAJH;AAKbC,IAAAA,YAAY,EAAE,IAAIZ,GAAJ,CAAQE,GAAG,CAACW,YAAZ,CALD;AAMbC,IAAAA,UAAU,EAAE,IAAId,GAAJ,CAAQE,GAAG,CAACa,UAAZ,CANC;AAObC,IAAAA,QAAQ,EAAE,IAAIhB,GAAJ,CAAQE,GAAG,CAACe,QAAZ,CAPG;AAQbC,IAAAA,eAAe,EAAE,IAAIlB,GAAJ,CAAQE,GAAG,CAACiB,eAAZ,CARJ;AASbC,IAAAA,eAAe,EAAE,IAAIpB,GAAJ,CAAQE,GAAG,CAACmB,eAAZ;AATJ,GAAP,CAAR;AAWD,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAO1B,SAAS,CAAC,UAAC2B,IAAD,EAAOtB,QAAP,EAAoB;AACnC,QAAI,OAAQsB,IAAR,KAAkB,UAAtB,EAAkC;AAChCtB,MAAAA,QAAQ,GAAGsB,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAEDD,IAAAA,IAAI,CAACE,YAAL,CAAkB;AAChBC,MAAAA,IAAI,EAAE,eADU;AAEhBC,MAAAA,EAAE,EAAEH;AAFY,KAAlB,EAGGxB,SAHH,EAGcE,QAHd;AAID,GAVe,CAAhB;AAWD,CAZD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst Big = require('bignumber.js')\n\nconst transform = function (res, callback) {\n  callback(null, {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: res.Wantlist || [],\n    peers: res.Peers || [],\n    blocksReceived: new Big(res.BlocksReceived),\n    dataReceived: new Big(res.DataReceived),\n    blocksSent: new Big(res.BlocksSent),\n    dataSent: new Big(res.DataSent),\n    dupBlksReceived: new Big(res.DupBlksReceived),\n    dupDataReceived: new Big(res.DupDataReceived)\n  })\n}\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    send.andTransform({\n      path: 'stats/bitswap',\n      qs: opts\n    }, transform, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}
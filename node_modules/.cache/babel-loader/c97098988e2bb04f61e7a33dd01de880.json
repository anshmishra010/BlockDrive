{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\anshm\\\\blockdrive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar TransformStream = require('readable-stream').Transform;\n\nvar pingMessageConverter = require('./ping-message-converter');\n\nvar PingMessageStream = /*#__PURE__*/function (_TransformStream) {\n  _inherits(PingMessageStream, _TransformStream);\n\n  var _super = _createSuper(PingMessageStream);\n\n  function PingMessageStream(options) {\n    _classCallCheck(this, PingMessageStream);\n\n    var opts = Object.assign(options || {}, {\n      objectMode: true\n    });\n    return _super.call(this, opts);\n  }\n\n  _createClass(PingMessageStream, [{\n    key: \"_transform\",\n    value: function _transform(obj, enc, callback) {\n      try {\n        var msg = pingMessageConverter(obj);\n        this.push(msg);\n\n        if (!msg.success) {\n          throw new Error(msg.text);\n        }\n      } catch (err) {\n        return callback(err);\n      }\n\n      callback();\n    }\n  }]);\n\n  return PingMessageStream;\n}(TransformStream);\n\nmodule.exports = PingMessageStream;","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/utils/ping-message-stream.js"],"names":["TransformStream","require","Transform","pingMessageConverter","PingMessageStream","options","opts","Object","assign","objectMode","obj","enc","callback","msg","push","success","Error","text","err","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,SAAnD;;AACA,IAAMC,oBAAoB,GAAGF,OAAO,CAAC,0BAAD,CAApC;;IAEMG,iB;;;;;AACJ,6BAAaC,OAAb,EAAsB;AAAA;;AACpB,QAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAO,IAAI,EAAzB,EAA6B;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAA7B,CAAb;AADoB,6BAEdH,IAFc;AAGrB;;;;+BAEWI,G,EAAKC,G,EAAKC,Q,EAAU;AAC9B,UAAI;AACF,YAAMC,GAAG,GAAGV,oBAAoB,CAACO,GAAD,CAAhC;AACA,aAAKI,IAAL,CAAUD,GAAV;;AAEA,YAAI,CAACA,GAAG,CAACE,OAAT,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACI,IAAd,CAAN;AACD;AACF,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,eAAON,QAAQ,CAACM,GAAD,CAAf;AACD;;AACDN,MAAAA,QAAQ;AACT;;;;EAlB6BZ,e;;AAqBhCmB,MAAM,CAACC,OAAP,GAAiBhB,iBAAjB","sourcesContent":["'use strict'\n\nconst TransformStream = require('readable-stream').Transform\nconst pingMessageConverter = require('./ping-message-converter')\n\nclass PingMessageStream extends TransformStream {\n  constructor (options) {\n    const opts = Object.assign(options || {}, { objectMode: true })\n    super(opts)\n  }\n\n  _transform (obj, enc, callback) {\n    try {\n      const msg = pingMessageConverter(obj)\n      this.push(msg)\n\n      if (!msg.success) {\n        throw new Error(msg.text)\n      }\n    } catch (err) {\n      return callback(err)\n    }\n    callback()\n  }\n}\n\nmodule.exports = PingMessageStream\n"]},"metadata":{},"sourceType":"script"}
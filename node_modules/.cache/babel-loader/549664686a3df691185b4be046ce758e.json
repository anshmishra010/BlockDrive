{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar PeerInfo = require('peer-info');\n\nvar PeerId = require('peer-id');\n\nvar multiaddr = require('multiaddr');\n\nmodule.exports = function (send) {\n  return promisify(function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    send({\n      path: 'swarm/addrs',\n      qs: opts\n    }, function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      var peers = Object.keys(result.Addrs).map(function (id) {\n        var peerInfo = new PeerInfo(PeerId.createFromB58String(id));\n        result.Addrs[id].forEach(function (addr) {\n          peerInfo.multiaddrs.add(multiaddr(addr));\n        });\n        return peerInfo;\n      });\n      callback(null, peers);\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/anshm/blockdrive/node_modules/ipfs-http-client/src/swarm/addrs.js"],"names":["promisify","require","PeerInfo","PeerId","multiaddr","module","exports","send","opts","callback","path","qs","err","result","peers","Object","keys","Addrs","map","id","peerInfo","createFromB58String","forEach","addr","multiaddrs","add"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAzB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAOP,SAAS,CAAC,UAACQ,IAAD,EAAOC,QAAP,EAAoB;AACnC,QAAI,OAAQD,IAAR,KAAkB,UAAtB,EAAkC;AAChCC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDD,IAAAA,IAAI,CAAC;AACHG,MAAAA,IAAI,EAAE,aADH;AAEHC,MAAAA,EAAE,EAAEH;AAFD,KAAD,EAGD,UAACI,GAAD,EAAMC,MAAN,EAAiB;AAClB,UAAID,GAAJ,EAAS;AACP,eAAOH,QAAQ,CAACG,GAAD,CAAf;AACD;;AAED,UAAME,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,KAAnB,EAA0BC,GAA1B,CAA8B,UAACC,EAAD,EAAQ;AAClD,YAAMC,QAAQ,GAAG,IAAIlB,QAAJ,CAAaC,MAAM,CAACkB,mBAAP,CAA2BF,EAA3B,CAAb,CAAjB;AACAN,QAAAA,MAAM,CAACI,KAAP,CAAaE,EAAb,EAAiBG,OAAjB,CAAyB,UAACC,IAAD,EAAU;AACjCH,UAAAA,QAAQ,CAACI,UAAT,CAAoBC,GAApB,CAAwBrB,SAAS,CAACmB,IAAD,CAAjC;AACD,SAFD;AAGA,eAAOH,QAAP;AACD,OANa,CAAd;AAQAX,MAAAA,QAAQ,CAAC,IAAD,EAAOK,KAAP,CAAR;AACD,KAjBG,CAAJ;AAkBD,GAvBe,CAAhB;AAwBD,CAzBD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst multiaddr = require('multiaddr')\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n    send({\n      path: 'swarm/addrs',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const peers = Object.keys(result.Addrs).map((id) => {\n        const peerInfo = new PeerInfo(PeerId.createFromB58String(id))\n        result.Addrs[id].forEach((addr) => {\n          peerInfo.multiaddrs.add(multiaddr(addr))\n        })\n        return peerInfo\n      })\n\n      callback(null, peers)\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}